<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Alex Design - Creativity Never Sleeps</title>
    <description>Alex Hu，90后，UI设计师，热爱技术&amp;设计。很高兴能在这里与你分享我对设计和生活的思考。</description>
    <link>http://localhost:4000//</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Sun, 12 Apr 2020 21:07:09 +0800</pubDate>
    <lastBuildDate>Sun, 12 Apr 2020 21:07:09 +0800</lastBuildDate>
    <generator>Jekyll v4.0.0</generator>
    
      <item>
        <title>苹果iOS 13 设计规范解析</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;iOS 13已经发布，结合WWDC 2019的官方视频与苹果官方资料，为大家带来最全面细致的iOS 13交互设计指南及规范解析。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h5 id=&quot;清晰clarity&quot;&gt;清晰（Clarity）&lt;/h5&gt;
&lt;p&gt;纵观整个iOS系统，清晰意味着，每种尺寸下的文本都应该是易读的，所有图标都应该是精确易懂的，每一个装饰都应该是精心恰当的，而且应该本着功能驱动设计的原则。利用留白，颜色，字体，图像以及其它界面元素来共同巧妙地突出重点内容且表达其不同的可交互性。&lt;/p&gt;

&lt;h5 id=&quot;遵从deference&quot;&gt;遵从（Deference）&lt;/h5&gt;
&lt;p&gt;干净美观的界面和清晰流畅的动态效果有助于用户去理解界面内容并与之进行交互，从而避免给用户带来干扰。而如果当前的内容占据了整个屏幕时，可以利用半透明以及模糊处理等方式来暗示用户其更多内容的存在。尽可能少的使用边框，渐变以及阴影可以让界面更轻，从而突出更多的内容。&lt;/p&gt;

&lt;h5 id=&quot;深度depth&quot;&gt;深度（Depth）&lt;/h5&gt;
&lt;p&gt;鲜明的视觉层级以及生动的动态效果可以对界面有更深层次的表达，赋予了界面活力也更有助于用户去理解。易于发现且易于触发的界面元素能够提升用户的体验愉悦感，而用户在成功触发相应功能或获得更多内容的同时也掌握了当前所在位置的由始至终（可以理解为PC端的面包屑）。因此当用户在浏览内容的同时，流畅的过渡其实便体现出了一种纵深感。&lt;/p&gt;

&lt;h3 id=&quot;二黑暗模式dark-mode&quot;&gt;二、黑暗模式（Dark Mode）&lt;/h3&gt;

&lt;p&gt;尤其这次更新中深色模式非常重头，“从 iOS 13.0 开始，人们可以将系统全局的外观样式设置为深色视觉风格，即“深色模式”。&lt;/p&gt;

&lt;p&gt;在深色模式中，系统会为所有界面、视图、菜单、控件等等调用一套更深的背景色方案，同时通过更多的半透明虚化效果使前景内容更有效地从深色背景当中突显而出。深色模式同样支持所有的可访问性设计标准。&lt;/p&gt;

&lt;p&gt;人们可以将深色模式设置为系统的默认外观模式，也可以让设备在光照条件较弱的环境中自动切换至深色模式。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/01ba3d5d0a11cca801205e4b6ce084.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;使用黑暗模式的原因&quot;&gt;使用黑暗模式的原因&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;查看照片等媒体内容会更加清晰，生动&lt;/li&gt;
  &lt;li&gt;在夜晚等光线较暗的模式下可以更舒适的浏览&lt;/li&gt;
  &lt;li&gt;很多用户觉得深色模式很酷&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;如何设计黑暗模式&quot;&gt;如何设计黑暗模式&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;专注并聚焦内容：深色模式可以将焦点集中于界面当中的内容区域，使内容本身得以突显，而周围的界面元素则会隐退于背景之中。更高效地给用户呈现内容。&lt;/li&gt;
  &lt;li&gt;在明亮和黑暗的外观下测试您的设计:  需要在app界面设计时充分考虑在深色与浅色两种模式下的内容依然清晰可读性。在某一种模式当中表现良好的设计方案，在另一种模式当中很可能出现问题。检视界面在两种模式下的表现，进行必要的调整，使其能够良好适配于每一种模式。&lt;/li&gt;
  &lt;li&gt;调整对比度和透明度：请确保在黑暗模式下的内容保持清晰易读。在黑暗模式下，您应该单独测试，并一并打开“增加对比度”和“降低透明度”来测试您的内容。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;三具有语义化的颜色semantic-color&quot;&gt;三、具有语义化的颜色（Semantic Color）&lt;/h3&gt;

&lt;p&gt;颜色是一种传递活力，提供视觉连续性，传达状态信息，响应用户操作提供反馈以及帮助人们可视化数据的好方法。&lt;/p&gt;

&lt;p&gt;在选择浅色和深色背景下单独和组合的应用色调颜色时，请查看系统的配色方案以获得指导。&lt;/p&gt;

&lt;h5 id=&quot;明智地使用颜色进行交流&quot;&gt;&lt;strong&gt;明智地使用颜色进行交流&lt;/strong&gt;&lt;/h5&gt;
&lt;p&gt;当谨慎使用时，提高注意重要信息的颜色力量会增强。例如，当出于非关键原因在应用程序中的其他地方使用红色时，警告人们关键问题的红色三角形变得不那么有效。&lt;/p&gt;

&lt;h5 id=&quot;在整个应用中使用补色&quot;&gt;&lt;strong&gt;在整个应用中使用补色：&lt;/strong&gt;&lt;/h5&gt;
&lt;p&gt;应用中的颜色应该很好地协同工作，而不是冲突或分散注意力。例如，如果粉彩对于应用程序的样式至关重要，请使用一组协调的粉彩。&lt;/p&gt;

&lt;h5 id=&quot;选择与您的应用徽标协调的有限调色板&quot;&gt;&lt;strong&gt;选择与您的应用徽标协调的有限调色板&lt;/strong&gt;&lt;/h5&gt;
&lt;p&gt;微妙地使用颜色是传达品牌的好方法。&lt;/p&gt;

&lt;h5 id=&quot;考虑选择色调颜色以指示整个应用程序的交互性&quot;&gt;&lt;strong&gt;考虑选择色调颜色以指示整个应用程序的交互性&lt;/strong&gt;&lt;/h5&gt;
&lt;p&gt;在Notes中，交互元素为黄色。在日历中，交互式元素为红色。如果您定义表示交互性的色调颜色，请确保其他颜色不与之竞争。提供两种版本的色调，以确保它在明暗模式下都很好看。当您使用系统颜色作为色调时，您可以自动支持高对比度。&lt;/p&gt;

&lt;h5 id=&quot;避免对交互式和非交互式元素使用相同的颜色&quot;&gt;&lt;strong&gt;避免对交互式和非交互式元素使用相同的颜色&lt;/strong&gt;&lt;/h5&gt;
&lt;p&gt;如果交互式和非交互式元素具有相同的颜色，则人们很难知道在哪里挖掘。考虑艺术品和半透明度如何影响附近的颜色。艺术品的变化有时需要改变附近的颜色，以保持视觉连续性并防止界面元素变得过于强大或不足。例如，地图在使用地图模式时会显示浅色方案，但在激活卫星模式时会切换为深色方案。放置在半透明元素后面或应用于半透明元素（如工具栏）时，颜色也会显得不同。&lt;/p&gt;

&lt;h5 id=&quot;在各种照明条件下测试应用程序的配色方案&quot;&gt;&lt;strong&gt;在各种照明条件下测试应用程序的配色方案&lt;/strong&gt;&lt;/h5&gt;
&lt;p&gt;根据房间的氛围，时间，天气等，室内和室外的照明都有很大差异。当您的应用在现实世界中使用时，您在计算机上看到的颜色看起来并不总是一样。始终在多种光照条件下预览您的应用，包括在晴天户外，以查看颜色的显示方式。如有必要，调整颜色以在大多数用例中提供最佳的观看体验。&lt;/p&gt;

&lt;h5 id=&quot;考虑true-tone显示如何影响颜色&quot;&gt;&lt;strong&gt;考虑True Tone显示如何影响颜色&lt;/strong&gt;&lt;/h5&gt;
&lt;p&gt;True Tone显示器使用环境光传感器自动调整显示器的白点，以适应当前环境的照明条件。主要关注阅读，照片，视频和游戏的应用可以通过指定白点适应性样式来增强或削弱此效果。&lt;/p&gt;

&lt;h5 id=&quot;考虑如何在其他国家和文化中看到您对颜色的使用&quot;&gt;&lt;strong&gt;考虑如何在其他国家和文化中看到您对颜色的使用&lt;/strong&gt;&lt;/h5&gt;
&lt;p&gt;例如，在某些文化中，红色表示危险。在其他人看来，红色具有积极的内涵。确保应用中的颜色发送相应的消息。&lt;/p&gt;

&lt;h5 id=&quot;避免使用让人们难以察觉应用内容的颜色&quot;&gt;&lt;strong&gt;避免使用让人们难以察觉应用内容的颜色&lt;/strong&gt;&lt;/h5&gt;
&lt;p&gt;例如，色盲人可能无法区分某些颜色组合，而对比度不足会导致图标和文本与背景混合并使内容难以阅读。有关指导，请参阅颜色和对比度。&lt;/p&gt;

&lt;h5 id=&quot;使用适应当前外观的颜色&quot;&gt;&lt;strong&gt;使用适应当前外观的颜色&lt;/strong&gt;&lt;/h5&gt;
&lt;p&gt;语义颜色（如分隔符）会自动适应当前外观。 当您需要自定义颜色时，将颜色集资源添加到应用程序的资产目录中，并指定颜色的浅色和深色变体，以便它可以适应当前的外观模式。 避免使用硬编码的颜色值或不适应的颜色。&lt;/p&gt;

&lt;p&gt;例如，在浅色模式下，用RGB色（255.255.255）100%的不透明度来作为背景颜色，那么在深色模式会使用RGB色（255.255.255）100%的不透明作为背景颜色。这两个颜色都会被称为背景色，打包写在代码中。系统只需按照不同的场景来使用这两种颜色即可。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/01b1985d0a1290a801205e4b0faa3a.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;苹果设计师为我们提供了4组的语义化文字样式颜色。无论在深色或者浅色模式，都能呈现出良好的对比度。如下图所示。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/01d2c25d0a12b7a801213ec234a3f5.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;同样的，iOS 13也提供了三种默认的背景色供我们选择，包含系统背景，二级和三级背景。设计师可以在三种层级颜色中搭配来表达更好的层次效果。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/01c6485d0a12cfa801205e4b23fd42.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;在填充色，分隔线和系统色中，建议大家使用各种透明度的颜色来处理，确保在黑暗模式和白色模式下，这些颜色都能很好的适配。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/0132b35d0a132da801213ec210e933.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;当然，不是所有的颜色都可以用透明色，比如下面这种。此时我们可以根据情况使用不透明的纯色代替。比如下面两张图片：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/01ce765d0a1354a801205e4b9852e3.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/01b3a65d0a1354a801213ec2a1f54c.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;iOS 13系统引入了六种不透明的灰色，你可以在上述半透明效果不佳的极少数情况下使用它们。 例如，交叉或重叠元素（例如网格中的线条或条形）在不透明度方面看起来更好。 通常，为UI元素使用语义定义的系统颜色。上下两图分别为默认颜色和无障碍颜色：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/01fd445d0a1387a801213ec2bf6c17.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;系统级别的颜色，在苹果的设计文档中也有详细的描述，如下图两图，分别为默认颜色和无障碍颜色：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/01e8dd5d0a13a6a801213ec2c6ea71.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/0170415d0a13a6a801205e4b4edf2d.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h5 id=&quot;确保所有外观都具有足够的色彩对比度&quot;&gt;&lt;strong&gt;确保所有外观都具有足够的色彩对比度&lt;/strong&gt;&lt;/h5&gt;
&lt;p&gt;使用系统定义的颜色可确保前景和背景内容之间的对比度。 对于自定义颜色，目标是对比度为7：1，尤其是对于较小的文本。 对比度越高，深色背景下颜色就越浅，浅色模式下就会颜色越深。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/0188fb5d0a13d1a801205e4b923030.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/01575e5d0a13d1a801213ec2308141.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;在使用设计师自己指定的颜色的时候，要确保在两种模式下的对比度都足够强，如下图点睛色指定了橙色，黑暗模式下使用白色，浅色模式下使用黑色文字，则对比度必须要拉大，确保应用的可读性足够好。&lt;/p&gt;

&lt;p&gt;在下图中，我们可以体会下黑色模式和浅色模式下，同一种颜色对于用户视觉的影响，是不一样的，要保证在两种模式下都有更好的对比度和可读性，需要设计师更严谨的配色。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/01efb25d0a1401a801213ec2ba1618.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;柔化白色背景的颜色。 如果您必须在暗模式下使用白色背景作为内容，请选择稍暗的白色，以防止背景对周围的暗色内容太刺眼。比如可以为白色背景加一些透明度，这样舒适性更好。&lt;/p&gt;

&lt;h3 id=&quot;三基本层与浮出层base--elevated&quot;&gt;三、基本层与浮出层（Base &amp;amp; Elevated）&lt;/h3&gt;

&lt;p&gt;很多时候我们都会用到这样的设计形式，比如在背景上方叠加一层具有阴影的模块。这样页面就具有了3维的层次感。比如下图这样：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/0161215d0a141ea801213ec2ad917d.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;但是在深色模式下，这种具有阴影的设计就失效了。所以，在深色模式下，我们就退而求其次，直接使用比背景稍微浅一点的颜色作为浮层，而不用考虑阴影了。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/014c1c5d0a145aa801213ec26f2b86.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;可以从下图这个简单的操作来理解基本层和浮出层。常规情况下，打开通讯录，那么这个界面使用了纯黑色背景，但是当我们从电话应用中打开这个联系模块时，此时它的背景色就成为了稍浅一点的颜色。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/01b1245d0a146aa801213ec20b46dc.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;同样，在iPad的邮件应用中，侧推弹层使用了稍浅一点的颜色作为背景色。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/0159655d0a148fa801213ec278e8c4.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;但是当使用分屏模式的时候，左右两侧的设计都使用了浮层的颜色作为背景色。因此，在不同的情况下，浮出层的用法是不一样的，这一点必须注意。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/01842a5d0a14a0a801213ec2a96df0.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;四材质materials&quot;&gt;四、材质（Materials）&lt;/h3&gt;

&lt;p&gt;通过下图，我们可以理解，材质主要可以理解为内容区块背景叠加到基础色上所呈现的透明度。如下图所示，有四种：Thick，Regular，Thin，Ultrathin。透明度分别递增。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/0161f55d0a14baa801205e4be5bd8a.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;在黑暗模式下同理&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/0141615d0a14ffa801205e4bbdb3ea.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;每种厚度的材质，苹果设计师都为我们提供了不同的配色方案。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/01725c5d0a1510a801205e4b93eb60.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;对于设计师来说，我们不需要完全严格遵循这些色值，只需要保证在不同厚度下的透明度能达到基本的对比度要求即可，比如右边的两个设计方案，可读性就非常差。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/0199115d0a151fa801213ec2bbd259.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;五控制条与导航栏control--bars&quot;&gt;五、控制条与导航栏（Control &amp;amp; Bars）&lt;/h3&gt;

&lt;p&gt;对于这些基础的组件，苹果建议我们使用系统内置的设计，因为他们都使用了语义化的颜色，能更好的适配白色模式和深色模式。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/01519f5d0a1536a801213ec22c4d8c.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;而对于Bar来说，大的Title文字则得到了普及，得益于手机屏幕的纵向长度提升，大的Title字体会让页面内容更加醒目，更加优雅。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/0182295d0a154ea801213ec2125c52.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/01891d5d0a1561a801213ec289d26c.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;六图标&quot;&gt;六、图标&lt;/h3&gt;

&lt;p&gt;一些长期保留直角的图标，在iOS 13中均改为圆角，线条也得到了加粗。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/0185d75d51a95ca8012187f432e3be.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;众所周知，圣弗朗西斯科字体是苹果内置的英文字体，如今的圣弗朗西斯科字体内置了1500多个符号（icon）。如果各位小伙伴对图标难以把握，或者想偷个懒，可以借助于SF字体中的符号来进行设计，更加方便快捷。因为这些符号通过输入法可以直接打出来。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/014b8a5d51a4aca8012187f4020512.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;设计师可以根据文字的字重，选配对应重量（粗细）的图标。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/01ef945d51a4cda80120695cf2085b.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;除了重量外，Apple还针对每个图标提供了三种不同的尺寸：Small、Medium、Large。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/0177685d51a4e1a8012187f4c957c9.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;三种状态下文字字号相同，图标尺寸不同。官方对上述三种尺寸给出了对应的使用场景。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/0192f15d51a4f1a80120695cff92c9.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;七更清晰的字体&quot;&gt;七、更清晰的字体&lt;/h3&gt;

&lt;h5 id=&quot;1计算器&quot;&gt;1、计算器&lt;/h5&gt;
&lt;ul&gt;
  &lt;li&gt;新的加粗字体的设计让重要的信息更加突出，整个iOS 13减少了细线字体的出现。&lt;/li&gt;
  &lt;li&gt;增强了字和背景的对比，让文字更容易识别，特别注重无障碍设计。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/01dc6d5e7c75f9a801216518190ae0.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h5 id=&quot;2日历&quot;&gt;2、日历&lt;/h5&gt;
&lt;ul&gt;
  &lt;li&gt;月份和日期都用了更粗的字体，但仍然保持了清晰度。&lt;/li&gt;
  &lt;li&gt;更加突出重要的信息，从iOS 11开始日历中的“年”和“月”是最突出的。而iOS 10却只突出了日期。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/0195c15e7c75f9a80120a895c68aa0.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;八更醒目的导航&quot;&gt;八、更醒目的导航&lt;/h3&gt;

&lt;h4 id=&quot;1运用大标题&quot;&gt;1、运用大标题&lt;/h4&gt;

&lt;p&gt;设置⻚面标题使⽤⼤字号; 导航栏增高。让用户随时都知道⾃己现在什么位置。但是当用户滚动页面时则缩小导航整体比例，因为此时用户更关注中间的内容。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/019fa25e7c5f13a80120a895111f97.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h5 id=&quot;2app-store---信息层级的改变&quot;&gt;2、App store - 信息层级的改变&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;原来的整个App Store变成了现在的“App”标签栏，为了突出其他更能盈利、用户更关注的信息。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;把用户评论数以及星级去掉，因为苹果的排名本身就已经说明了App的优秀程度。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;加粗了关键信息-价钱、标题。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/0154625e7c6adba80120a8951afe4a.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h5 id=&quot;3更清晰的图标&quot;&gt;3、更清晰的图标&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;解锁页面 - 以实心按钮取代线形按钮，这样可以增强点击感。&lt;/li&gt;
  &lt;li&gt;键盘 - 用更宽的间距、浅浅的按钮阴影来加强可点击感。&lt;/li&gt;
  &lt;li&gt;以面性图标取代线性图标（因为面性图标更像实物实体是实心的为主，图标也更显稳重。&lt;/li&gt;
  &lt;li&gt;涉及（线）的图标，加粗线条，使之看起来更像面性图标。&lt;/li&gt;
  &lt;li&gt;phone、App store、photos的信息层级被重新设计。（例如App Store的标签栏为了突出其他更能盈利、⽤户更关注的信息， 如游戏，现在就单独成为了⼀个标签页。然后将“Upates”盈利能力一般的信息入口移至右上角的个人中心）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/014b765e7c6f7ca80120a895200aec.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;九弹窗视图&quot;&gt;九、弹窗视图&lt;/h3&gt;

&lt;p&gt;模态我们可以理解是一种弹层的形式，这种弹层具有强制性。它已经存在很久，对于模态场景，大家不要乱用，必须谨慎。（静电注）&lt;/p&gt;

&lt;p&gt;在iOS 13之前，模态展示的视图默认是全屏（Fullscreen）。&lt;/p&gt;

&lt;p&gt;iOS 13新增了一种操作视图：操作的视图會被縮小，同時淡化置于新跳出视图的下方。&lt;/p&gt;

&lt;p&gt;这样的弹窗视图在Human Interface Guideline（苹果设计指南）中被称为Sheet。新版的视图有助于用户明确信息的层级，便于用户找回此前被暂停的任务。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/014a235d51a533a8012187f464ce46.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;新版的视图弹窗（Sheet）提供三种关闭方式：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;从屏幕顶部向下滑动&lt;/li&gt;
  &lt;li&gt;当卡片内容滚动到顶部时，从屏幕上的任何位置向下滑动 （单手操作的）&lt;/li&gt;
  &lt;li&gt;点击按钮&lt;/li&gt;
  &lt;li&gt;如果关闭弹窗时存在“修改为储存的内容”这类行为时，要提醒使用者是否要放弃编辑。&lt;/li&gt;
  &lt;li&gt;弹窗中的任务需要简单、简短，避免过于复杂，导致用户忘了此前他们所暂停的任务，进而导致用户“迷路”。以通讯录为例：&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/01578c5d51a561a8012187f49aad22.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;对于拍照、录像、照片编修、文件编辑等这类需要沉浸式、较复杂的使用场景，就适合维持过去全屏（Fullscreen）的呈现方式。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/0113165d51a570a80120695c04538c.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;十消息通知&quot;&gt;十、消息通知&lt;/h3&gt;

&lt;p&gt;消息通知的目的是为了提升产品活跃度，激活休眠用户使用产品。&lt;/p&gt;

&lt;p&gt;出现消息通知的场景有锁屏、使用中、通知中心。其中交互类型分为“显式推送”、“隐式推送”。视觉样式分为“普通消息”、“详情样式”。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;iOS 消息通知的设计原则为“不打扰，不错过”&lt;/li&gt;
  &lt;li&gt;推送通知为了有效的提醒和保存用户注意&lt;/li&gt;
  &lt;li&gt;重叠样式则是为了减少用户消耗时间而设&lt;/li&gt;
  &lt;li&gt;提供有用的、有意义的通知（通知不是为了引导用户打开“你的应用”在推送消息时要注意通知个性化。尤其是注重场景化，运用智能算法推算出用户使用app的契机，提供合适的推送）&lt;/li&gt;
  &lt;li&gt;即使用户没有作出回应，也不要为了同一件事情发送多个通知（推荐按应用分组，也可以定制化分组）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/01b2c65e7c7ea2a80120a8957f3396.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/017c1a5e7c82c8a80120a895229952.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;明确告知用户开启通知权限的价值）。最好的请求权限应在恰当的时候提出。如当用户完成新手引导后或登陆后。开通权限后app提供描述性文字和声音，以便在隐藏通知预览时显示。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/01cf715e7c8341a80120a8959f635e.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;考虑提供一个详情视图（包含图片、视频以及其它可动态更新的内容，允许用户可执行快速的操作）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/01053c5e7c85c4a80120a89589c8aa.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;考虑提供一个详情视图（包含图片、视频以及其它可动态更新的内容，允许用户可执行快速的操作）&lt;/li&gt;
  &lt;li&gt;提供直观、有用的操作（最多包含四个操作按钮，用来执行常用任务）尽可能的提供少操作按钮，运用席克定律帮助用户作出选择，减少用户的思考避免焦虑。&lt;/li&gt;
  &lt;li&gt;避免展示破坏性的操作（确保用户有上下问，并用红色字体显示）。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/01b7ac5e7c89aaa801216518a80f90.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/0193815e7c89aba80120a8955ef7c0.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;画出用户旅程图，找出消息推送切入点，帮助并提醒用户重要信息，避免用户在状态变更后错过重要信息，及时告知用户。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;十一haptictouch&quot;&gt;十一、HapticTouch&lt;/h3&gt;

&lt;p&gt;在iOS 13中，Apple取消了 3DTouch（又名 Force Touch），改用了HapticTouch。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/011e695d51a5aea80120695cf7bc60.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;此前，在支持3DTouch的机型上，轻轻长按桌面图标，图标会开始晃动，会进入重新排列桌面的状态。&lt;/p&gt;

&lt;p&gt;而“重按”某个图标，就可以通过3DTouch呼出菜单。&lt;/p&gt;

&lt;p&gt;在改用HapticTouch之后，原本的3DTouch也随之取消，系统不再区分轻按和重按。只能通过长按呼出菜单，“重新排列桌面”也变成了菜单中的一个选项。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/01274d5d51a5f8a80120695cb622ec.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/01c9725d51a60ba8012187f4296a28.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;十二情境菜单contextual-menu&quot;&gt;十二、情境菜单（Contextual Menu）&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/01db955d0a1663a801205e4be5c8e5.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;情景菜单类似于Peek（预览）和Pop（弹出），但有两个主要区别：情境菜单可在运行iOS 13及更高版本的所有设备上使用；Peek和Pop仅适用于支持3D Touch的设备。 情境菜单立即显示上下文相关的命令；Peek和Pop需要向上滑动才能查看命令。 （请注意：iOS 13中 3D touch的交互方式与此情境菜单的交互逻辑不太一样，情境菜单的交互方式是长按，而不是重压。&lt;/p&gt;

&lt;p&gt;对于情境菜单的交互设计，请遵循以下建议：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;始终采用情境菜单： 如果您为某些地方的项目提供情境菜单而不是其它地方的项目，人们将不知道他们可以在哪里使用该功能，并且可能认为您的应用程序存在问题。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;仅包括适用于该项目的最常用命令：例如，在邮件消息的上下文菜单中，包含用于回复和移动邮件的命令是有意义的，但包含格式或邮箱命令没有意义。 列出太多命令可能会让人无所适从。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;使用子菜单来管理复杂性：子菜单是一个情境菜单项，显示逻辑相关命令的二级菜单。 为子菜单提供描述其内容的直观标题，以便人们可以预测子菜单的命令而不会泄露它们。 简洁，以行动为导向的标题还允许人们跳过他们在当前环境中不需要的子菜单。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;将子菜单保持在一个级别：虽然子菜单可以缩短情境菜单并阐明人们可以执行的命令，但是多个子菜单级别使得体验变得复杂并且人们难以导航。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;将最常用的项目放在菜单的顶部：当人们打开情境菜单时，他们的焦点位于该菜单的顶部区域。 将最常见的项目放在菜单顶部可以帮助人们找到他们正在寻找的项目。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;使用分隔符对相关菜单项进行分组：创建可视分组可以帮助人们更快地扫描菜单。 例如，您可以使用分隔符对与编辑项目相关的操作进行分组，使用另一个分隔符对与共享项目相关的操作进行分组。 通常，不建议情境菜单中有三个以上的组。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;避免为同一项目提供情境菜单和编辑菜单： 当人们为同一个项目启用这两个功能时，系统很难检测到意图，这可能会让人感到困惑。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;避免提供打开项目预览的操作按钮： 人们可以点击打开他们正在预览的项目，因此通常不需要提供明确的“打开”按钮。&lt;/p&gt;

&lt;h3 id=&quot;十三默认头像&quot;&gt;十三、默认头像&lt;/h3&gt;

&lt;p&gt;在iOS 12系统中，“默认头像”都具有性别特征。比如通讯录的图标，就是由一男一女的剪影所组成。&lt;/p&gt;

&lt;p&gt;在其他位置，比如：通讯录详情页、短信列表、AppStore所用的默认头像均为“男性”剪影。&lt;/p&gt;

&lt;p&gt;而在iOS 13中，上述这些位置的头像，都变成了去性别特征的圆形头像。如下图：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/01be765d51a455a8012187f48a4b29.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/01107b5d51a462a80120695cc48edf.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Apple没有根据账号性别显示男/女头像，而是采用“无性别头像”。我想这么做也许是为了更好的照顾到“跨性别群体”的感受。&lt;/p&gt;

&lt;p&gt;此前跨性别群体曾要求Apple在Emoji表情中增加“特殊人群”、“特殊家庭”和“彩虹旗”等标志，这些眼下已出现在iOS 12.2的Emoji中。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/01a0355d51a474a8012187f413e673.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;十四开关switches&quot;&gt;十四、开关（Switches）&lt;/h3&gt;

&lt;p&gt;自iOS 7发布以来，iOS的切换开关一直没有变化。其特点是，开关的投影延展到了“凹槽”外、且底色会有缩放动效。&lt;/p&gt;

&lt;p&gt;时隔五年，苹果对切换开关的细节做了调整。在最新的OS 13中，开关的投影缩到了“凹槽”内，并且取消了底色缩放的过渡，改用“渐隐渐显”的过渡方式。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/011c765d51a48ea80120695c328922.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;十五分段控件&quot;&gt;十五、分段控件&lt;/h3&gt;

&lt;p&gt;新版的分段控件由过去的描边线，改为填充的形式。其中，选中状态的滑块含投影，投影效果和切换开关一样，投影只在“凹槽”内。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/011c485d51a50da8012187f4d4fe46.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;十六音量调整视图&quot;&gt;十六、音量调整视图&lt;/h3&gt;

&lt;p&gt;在iOS12版本中，音量的调节图标是在屏幕中间显示一个巨大的铃铛，铃铛下面会有音量大小的进度条，严重干扰用户视线。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/019da45d51a663a8012187f46df6ec.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;iOS13的音量控制图标也进行了全新的设计，音量大小的图标被设计在了屏幕左侧。在音量调节过程中，喇叭图标也非常直观的显示了音量大小的变化。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/0117d55d51a6a8a80120695cbe49e2.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;另外，左侧的音量可以支持滑动调整，类似底部控制器弹窗的音量调节。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/0117d55d51a6a8a80120695cbe49e2.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;十七三指菜单&quot;&gt;十七、三指菜单&lt;/h3&gt;
&lt;p&gt;在iOS 13中，只要用3个手指点击屏幕，就可以呼出一个全新的菜单。用来完成：撤销、剪切、复制、粘贴、重做这五个操作。&lt;/p&gt;

&lt;p&gt;值得一提的是，Edit Menu依然存在，可以和三指菜单同时出现。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/01512e5d51a6fca80120695c5d23af.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;本文部分内容参考文档&quot;&gt;本文部分内容参考文档&lt;/h4&gt;

&lt;p&gt;https://developer.apple.com/videos/play/wwdc2019/808/&lt;/p&gt;

&lt;p&gt;https://developer.apple.com/design/human-interface-guidelines/ios/visual-design/dark-mode/&lt;/p&gt;

&lt;p&gt;https://developer.apple.com/design/human-interface-guidelines/ios/app-architecture/modality/&lt;/p&gt;

&lt;p&gt;https://developer.apple.com/design/human-interface-guidelines/sf-symbols/overview/&lt;/p&gt;

</description>
        <pubDate>Wed, 01 Apr 2020 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2020/04/01/%E8%8B%B9%E6%9E%9CiOS-13-%E6%96%B0%E8%AE%BE%E8%AE%A1%E8%A7%84%E8%8C%83%E5%85%A8%E9%9D%A2%E8%A7%A3%E6%9E%90.html</link>
        <guid isPermaLink="true">http://localhost:4000/2020/04/01/%E8%8B%B9%E6%9E%9CiOS-13-%E6%96%B0%E8%AE%BE%E8%AE%A1%E8%A7%84%E8%8C%83%E5%85%A8%E9%9D%A2%E8%A7%A3%E6%9E%90.html</guid>
        
        <category>移动端</category>
        
        <category>设计规范</category>
        
        
        <category>移动端</category>
        
      </item>
    
      <item>
        <title>小公司里如何主导设计项目</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;小公司没人带如何提升自己，我是这样做的！&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;一设计稿文字图片不要一样&quot;&gt;一、设计稿文字图片不要一样&lt;/h3&gt;
&lt;p&gt;刚做UI的时候，根本就没有注意设计稿文字图片要保持不一样。&lt;/p&gt;

&lt;p&gt;我以为这些图片和文字都是后台配置，认为没有必要单独去做啊，这不是浪费时间么，本来项目那么紧，那时候做的项目基本和下图一样，图片文字都一模一样。&lt;/p&gt;

&lt;p&gt;直到有一次去面试，面试官问我:＂为什么你的设计稿图片文字都是一样的呢？＂，我对他说，＂因为这些是后台配置的，所以我就觉得没有必要设计＂。他反问道，＂你不设计出来，我怎么知道这个界面好不好？＂，就这样短短聊了几句，他就让我回家等通知了。&lt;/p&gt;

&lt;p&gt;但那时候我并没有在意，直到后来工作中领导又问了同样的问题，我才回来做了一个实验，在网上找一张设计还不错的案例，这个界面整体给人清爽简洁、配图活跃个性的感觉。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2020/04/09/MapOPsSZJk6BjUi.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;然后在将里面的图都改成一样的，我就发现改完之后，确实很难判断这个界面的好坏，尤其像这种内容少图片多的界面，他的成败其实重点就在配图上，如下图：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2020/04/09/4RjFSYD62MntvBf.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;后来在做设计稿时，不管在忙，我都会把图、文字好好编辑，哪怕图可以丑一点，但是一定要保证不一样的内容。&lt;/p&gt;

&lt;h3 id=&quot;二别用其他组件代替&quot;&gt;二、别用其他组件代替&lt;/h3&gt;
&lt;p&gt;在设计时，一定不要为了省事直接用其他平台的组件来代替，这直接会导致设计效果和规范的不统一，同时还会浪费大量的沟通时间。&lt;/p&gt;

&lt;p&gt;比如我们公司的后台界面用的 View Ul的框架，现在需要给公司的后台进行优化，但是我手上又没有View的组件库，如果重新画感觉有点浪费时间，如下图：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2020/04/09/7LuFZmWzKlUX2kC.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;于是想着反正手上有现成的蚂蚁金服后台组件库，要不直接拖过来用，大不了后面给前端说下，设计稿只是整体效果，具体的控件还是用原来的样式。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2020/04/09/3T1wmPLS7UKDYWI.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;但是，我以为这样嘱咐了前端就没问题了实际上前端其实搞不懂哪些是用原来的，哪些用现在的，或者他干脆忘记我说的话了，直接就按照设计稿上来实现了，结果验收时才发现又得重新调整。&lt;/p&gt;

&lt;p&gt;最后，我本来只需花20分钟画套控件，但是我却花了2个小时来和前端沟通，重要的是还浪费了前端的时间。&lt;/p&gt;

&lt;p&gt;这件事情让我明白，有些懒你偷了，迟早是要加倍还回来的。&lt;/p&gt;

&lt;h3 id=&quot;1极限值要考虑全面&quot;&gt;1、极限值要考虑全面&lt;/h3&gt;
&lt;p&gt;在设计时，一定要把极限值考虑全面，我之前在设计数据页面时，就上过一次当。&lt;/p&gt;

&lt;p&gt;我在设计数据页面时，由于整个界面都是数据，没有图片，因此想着用图标来丰富一下。但是却忘记了解数据最大会显示多少位，就导致上线后才发现当前样式容纳不下，真实数据最长有7位数，然后我这最大只能展示5位。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2020/04/09/kDfGJOpjz3isNcl.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;于是领导通知马上调整一版新的出来，于是我只能将图标删掉，保证数据展示出来。如果这样的情况多次发生，我想这个月的绩效就只能得C了。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2020/04/09/Fb8cZQVBKmDeLxO.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;因此，为了避免这样的情况再次发生，我想着要不把界面中常用到的极限值都总结出来，下次在设计时就不会这样手忙脚乱了。&lt;/p&gt;

&lt;h5 id=&quot;2列表&quot;&gt;2、列表&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;需要注意标题的长短、标题过长最多展示几行、如何做截断处理；&lt;/li&gt;
  &lt;li&gt;描述文字过长如何处理，是否展开收起；&lt;/li&gt;
  &lt;li&gt;列表中，两个不确定长短的内容，不要排一行，避免内容过多排不下；&lt;/li&gt;
  &lt;li&gt;考虑各角色参数的变化，进行适配；&lt;/li&gt;
  &lt;li&gt;考虑图片适配规则；&lt;/li&gt;
  &lt;li&gt;考虑交互手势操作；&lt;/li&gt;
  &lt;li&gt;标题域最多支持几个字，超过如何展示。&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;3表单&quot;&gt;3、表单&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;输入域展示宽度确定；&lt;/li&gt;
  &lt;li&gt;对于地址、备注等文本框当文字超过一行如何展现，是滚动还是换行，输入文字是否有限制数量；&lt;/li&gt;
  &lt;li&gt;考虑当标题超过1行如何显示，&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;4弹窗提示框控制面板等&quot;&gt;4、弹窗、提示框、控制面板等&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;当内容超过一行如何显示；&lt;/li&gt;
  &lt;li&gt;后台获取的数字、文字一定要去后台确定最长数据，保证当前设计能够承载。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;三所有流程都需展示出来&quot;&gt;三、所有流程都需展示出来&lt;/h3&gt;
&lt;p&gt;在设计时，一定要把整个流程的界面都设计出来，哪怕是一个 Toast、一个弹窗也要展示出来。&lt;/p&gt;

&lt;p&gt;我就犯过这样的问题，之前我在设计购物车列表时，界面中有个删除按钮，需要二次确认弹窗，类似下图当当上面的弹窗，于是我口头告知前端这里直接加个二次确认的弹窗组件即可，我就不画出来了，但是由于时间比较长，他们写的时候就忘记了。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2020/04/09/RFrTLYXmClAzqZ8.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;后来也是在验收时才发现，删除的时候直接就删除了，没有二次确认，收藏成功也没有提示。这时候只好在拜托前端加上。&lt;/p&gt;

&lt;p&gt;因此这次的教训告诉我，尽量将各流程都画出来，不仅可以让自己逻辑更清晰，不易漏掉界面，同时也不怕前端忘记，从而减少沟通成本。&lt;/p&gt;

&lt;h3 id=&quot;四所有状态都应设计出来&quot;&gt;四、所有状态都应设计出来&lt;/h3&gt;

&lt;p&gt;界面中的状态，以前我都是根据自己的经验来设计，但是人脑有时候是最不靠谱的，当我们大脑高度紧张时，就容易出现漏考虑的情况。&lt;/p&gt;

&lt;p&gt;比如下面贝壳的提交表单，在设计时我们需要考虑默认态是什么，选中是什么；预算金额的滑块最小时如何显示，最大时如何显示；选择区域时默认是什么状态、选中是什么状态，联动的状态又是什么。键盘弹起的默认状态和输入状态，键盘收起弹出收起的交互操作，以及提示、成功、失败等反馈的效果都需要设计出来。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2020/04/09/Hi7PRsOGBJKI8ho.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;是不是看着脑袋都很晕，这种表单流程，我在设计时就很容易将地址联动、键盘交互这些漏掉。因此为了避免这种情况发生，我同样根据项目制作了一份常见的状态表，避免考虑不周全的情况。&lt;/p&gt;

&lt;h4 id=&quot;1列表&quot;&gt;1、列表&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;空状态如何显示，是否需要引导&lt;/li&gt;
  &lt;li&gt;列表标题过长如何显示&lt;/li&gt;
  &lt;li&gt;描述文字为空、正常、过长如何显示&lt;/li&gt;
  &lt;li&gt;翻页加载样式、没有更多内容的样式&lt;/li&gt;
  &lt;li&gt;数据加载提示&lt;/li&gt;
  &lt;li&gt;默认状态、点击状态、长按状态&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;2表单输入&quot;&gt;2、表单输入&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;考虑默认状态、编辑状态、常态&lt;/li&gt;
  &lt;li&gt;输入时的键盘交互操作&lt;/li&gt;
  &lt;li&gt;报错、网络断开、成功、失败等提示&lt;/li&gt;
  &lt;li&gt;编辑后跳转到哪里？是直接跳转到列表，还是需要展示预览输入有逻辑关系的内容如何交互&lt;/li&gt;
  &lt;li&gt;输入出行意外该如何处理，是否保存，需要做什么操作输入特殊字符是否做限制&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;3按钮&quot;&gt;3、按钮&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;正常、触发、禁用、加载等状态&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;4搜索&quot;&gt;4、搜索&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;在当前页操作，还是跳转到新页面&lt;/li&gt;
  &lt;li&gt;实时搜索，还是提交后才更新数据&lt;/li&gt;
  &lt;li&gt;正常态、触发态、输入态、提交态&lt;/li&gt;
  &lt;li&gt;历史记录最多展示几条数据？是否支持清空&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;参考资料&quot;&gt;参考资料&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://m.zcool.com.cn/article/ZMTExOTU0OA==.html&quot;&gt;小公司没人带如何提升自己，我是这样做的！&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 01 Apr 2020 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2020/04/01/%E5%B0%8F%E5%85%AC%E5%8F%B8%E9%87%8C%E5%A6%82%E4%BD%95%E4%B8%BB%E5%AF%BC%E8%AE%BE%E8%AE%A1%E9%A1%B9%E7%9B%AE.html</link>
        <guid isPermaLink="true">http://localhost:4000/2020/04/01/%E5%B0%8F%E5%85%AC%E5%8F%B8%E9%87%8C%E5%A6%82%E4%BD%95%E4%B8%BB%E5%AF%BC%E8%AE%BE%E8%AE%A1%E9%A1%B9%E7%9B%AE.html</guid>
        
        <category>设计经验</category>
        
        
        <category>设计经验</category>
        
      </item>
    
      <item>
        <title>安卓和iOS的区别</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;现在iOS的优势在哪？还是说Android已经和iOS平起平坐了？&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;一封闭与开放&quot;&gt;一、封闭与开放&lt;/h3&gt;

&lt;h4 id=&quot;1两个系统对屏幕反应的优先级不同&quot;&gt;1.两个系统对屏幕反应的优先级不同&lt;/h4&gt;

&lt;p&gt;iOS对屏幕反应的优先级是最高的，它的响应顺序依次为Touch–Media–Service–Core架构，换句话说当用户只要触摸接触了屏幕之后，系统就会最优先去处理屏幕显示也就是Touch这个层级，然后才是媒体（Media），服务（Service）以及Core架构。&lt;/p&gt;

&lt;p&gt;而Android系统的优先级响应层级则是Application–Framework–Library–Kernal架构，和显示相关的图形图像处理这一部分属于Library，你可以看到到第三位才是它，当你触摸屏幕之后Android系统首先会激活应用，框架然后才是屏幕最后是核心架构。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/01a3245a25db48a80120ba3872a7d3.jpg@800w_1l_2o_100sh.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;2硬件工作配置不同&quot;&gt;2.硬件工作配置不同&lt;/h4&gt;
&lt;p&gt;iOS基于GPU加速Android系统产品则并非如此，因为Android需要适应不同的手机硬件，需要满足各种差异配置，所以很多图形特效大多都要靠程序本身进行加速和渲染，并严重依赖CPU运算的操作自然会加大处理器的负荷，从而出现卡顿的问题&lt;/p&gt;

&lt;h4 id=&quot;3开发机制不同&quot;&gt;3.开发机制不同：&lt;/h4&gt;
&lt;p&gt;安卓机制效率低，Android的编程语言是JAVA，而iOS的则为Objective-C。Objective-C的优势是效率高但比较“唯一”，而JAVA的优势则是跨平台不过运行效率相对偏低，其实这两个编程语言所带来的机制不同，就已经造成了各自系统之间的流畅性差异化。&lt;/p&gt;

&lt;p&gt;我们可以用一个简单易懂的案例来解释封闭与开放。例如消息提醒机制的差异。&lt;/p&gt;

&lt;p&gt;iOS系统对权限控制比较严，每当我们下载一个新的app，当要调用相册权限、相机、麦克风、位置等都需要用户选择确定，如果用户点击不允许，就没法调取。想要再次允许的时候操作也比较麻烦，需要到系统设置里面去打开权限。这也就是为什么iOS消息设置相对来说复杂一点，根本原因是iOS系统。&lt;/p&gt;

&lt;p&gt;由于Android开源，Android开发在用户安装app就获取了很多权限，比如用户安装app后，对于消息提醒的设置只需要在app设置界面设置就可以了。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/016dc15a25db84a801216e8d120df1.jpg@800w_1l_2o_100sh.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;二物理交互区别&quot;&gt;二、物理交互区别&lt;/h3&gt;
&lt;p&gt;Android和iOS除了封闭和开放的差别外，还有物理控制、交互的差别。iOS全是由苹果公司统一出品，而安卓则不同。在国内，经济快速发展，安卓手机厂商如雨后春笋拔地而起，很多从原来的山寨机一步步打造自己的品牌，逐渐得到用户的认可。我们常见的Android手机有三星、谷歌、小米、华为、中兴、魅族、oppo、美图手机、锤子手机、努比亚……面对着这么多手机厂商，每个厂商有着自己独特的功能和交互方式，甚至有的物理键都不相同。&lt;/p&gt;

&lt;h4 id=&quot;截屏&quot;&gt;截屏&lt;/h4&gt;
&lt;p&gt;就拿一个很常见的截屏功能来说，iOS是电源开关键和home键同时按，而小米手机截屏则是按住音量键和最左边的功能键截屏（其实小米有五种截屏方法，如下图），谷歌手机又不同了，华为也不一样了。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/0178e05a25dbb9a801216e8d8bcc8b.jpg@800w_1l_2o_100sh.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;解锁&quot;&gt;解锁&lt;/h4&gt;

&lt;p&gt;比如说一个常见的功能，指纹解锁，苹果5、6、7的指纹解锁就是在home键上，而iPhone x则采用面部识别解锁。从用户的操作习惯来说，会用大拇指来解锁，不管左手还是右手。而华为手机的指纹解锁放在手机的背面，用户大多数则会选择食指来解锁。再举一个栗子，密码解锁除了指纹外，还有输入密码解锁，iOS从原来的四位到现在的6位，都是采用键盘输入密码的方式进行解锁；而安卓手机解锁大部分是采用的手势密码的方式进行解锁。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/01e7255a25dbdfa80120ba38e170d4.jpg@800w_1l_2o_100sh.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;拍照&quot;&gt;拍照&lt;/h4&gt;
&lt;p&gt;再比如美图手机、oppo r11这些手机都是主打拍照功能，拍照很牛逼，吸引着用户，当然，拍照是现在很多手机主推功能，包括苹果手机也一直在拍照功能上改进。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/01ace45a25dc0ea80120ba384f746c.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;三设计的差异&quot;&gt;三、设计的差异&lt;/h3&gt;

&lt;h4 id=&quot;1设计输入与输出&quot;&gt;1.设计输入与输出&lt;/h4&gt;

&lt;h5 id=&quot;a尺寸大小&quot;&gt;a.尺寸大小&lt;/h5&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/017df65a25dc87a80120ba38667b71.jpg@800w_1l_2o_100sh.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;如果每种手机尺寸都去做设计，一个设计师你会做死，设计师多了公司又请不起。&lt;/p&gt;

&lt;p&gt;通常设计师们是这样做的：Android就以720px＊1280px 或者1080px＊1920px（根据具体情况定，但大部分是以720px＊1280px做的），iOS则以750px＊1334px。&lt;/p&gt;

&lt;p&gt;我们看公司业务情况，重Android还是重iOS，重谁就以谁为基础做设计，只做一套，让开发适配，具体控件调用相应平台原生控件。如果两种都重视，那我们就以iOS的&lt;strong&gt;750px＊1334px&lt;/strong&gt;作为设计基础。&lt;/p&gt;

&lt;p&gt;Android的安全点击范围为48dp，iOS的则为44pt。Android的状态栏为24dp，iOS的为20pt。安卓的顶部导航栏为56dp，iOS的为44pt。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/01acbe5a25dcbfa801216e8d7610c2.jpg@800w_1l_2o_100sh.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h5 id=&quot;b单位&quot;&gt;b.单位&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;px是我们常用的像素单位。比如我们常说的苹果6的设计尺寸为750px＊1334px。&lt;/li&gt;
  &lt;li&gt;pt是在iOS中表示长度单位和字体单位。对于iOS开发来说，我们应该给他们pt的单位，我们现在设计的尺寸基本是以苹果6的尺寸设计的（用pt单位表示就是375pt＊667pt，用像素单位表示就是750px＊1334px，在2倍图中1pt＝2px）。&lt;/li&gt;
  &lt;li&gt;dp是安卓开发中使用的设计单位，就拿我们常用的720px＊1280px来说，与之对应的安卓单位表示为360dp＊640dp，它们也是2倍的关系。&lt;/li&gt;
  &lt;li&gt;sp是安卓的字体单位，假如字体在你的设计稿720px＊1280px中为32px，那么在360dp＊640dp中该字体的大小就为16sp。&lt;/li&gt;
  &lt;li&gt;XHDPI是对应安卓的2倍图（720px＊1280px)，XXHDPI是对应安卓的3倍图（1080px＊1920px）这两个是我们现在常用的。
&lt;img src=&quot;https://img.zcool.cn/community/0196315a25dcefa801216e8df10fd9.jpg@800w_1l_2o_100sh.jpg&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;iOS我们通常设计尺寸是750px＊1334px，它对应的是iOS的@2x图。
&lt;img src=&quot;https://img.zcool.cn/community/01befa5a25dd08a80120ba385916e3.jpg@800w_1l_2o_100sh.jpg&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;c字体&quot;&gt;c.字体&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;在Android中，英文字体使用Roboto，中文字体使用Noto（思源黑体）。Google联合Adobe发布的「思源黑体」作为Android的默认中文字体，不仅仅在字形上更易于在屏幕的阅读，并且拥有7个字重，充分满足了设计的需求。
&lt;img src=&quot;https://img.zcool.cn/community/0188785a25dd84a80120ba3868d218.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;iOS 中，在英文方面，苹果加入了新的字体San Francisco，该字族包含了有两个字体：为 iOS 和 OS X 设计的 SF，以及为 Watch OS 设计的 SF Compact ，而各自分为各自分为Text 和 Display，前者 6 个字重，后者 9 个（多了三个斜体）。OS全新的「苹方」，字形更加优美，且在屏幕的显示也更加清晰易读，拥有6个字重，满足了日常的设计和阅读需求。
&lt;img src=&quot;https://img.zcool.cn/community/01e1635a25ddb4a80120ba387c1753.jpg&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;在我们移交设计稿时，我们要向开发说明，安卓、iOS开发，用系统自带的字体，那么安卓就会用安卓系统的字体，iOS则会用iOS系统的字体。除非设计特殊要求用其他字体，那就要和开发工程师商量了，在安装包植入字体包，这样才能让用户使用的字体都相同。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;d距离大小字体大小的区别&quot;&gt;d.距离大小、字体大小的区别&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;在iOS中，内容到边的距离通常是15pt（以750px＊1334px为基础，像素大小为30px）。&lt;/li&gt;
  &lt;li&gt;而安卓基本是16dp（以720px＊1280px为基础，像素大小为32px）。&lt;/li&gt;
  &lt;li&gt;字体大小也不一样，iOS是11pt、13pt、15pt、17pt，而安卓中是12sp、14sp、16sp、18sp。&lt;/li&gt;
  &lt;li&gt;用一种设计尺寸，那么我们通常采用偶数，这样方便两边适配，就是间距以8px为基础我们边距可以定位32px。字体大小也采用12sp、14sp、16sp、18sp。
&lt;img src=&quot;https://img.zcool.cn/community/0159a15a25ddf9a801216e8d609978.jpg@800w_1l_2o_100sh.jpg&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;e设计输出&quot;&gt;e.设计输出&lt;/h4&gt;
&lt;h5 id=&quot;标注&quot;&gt;标注&lt;/h5&gt;
&lt;p&gt;sketch Measure，它可以轻松导出我们的尺寸标注，导出的时候我们可以选择默认展示的单位。如果是给安卓开发导出尺寸，你的画板是360dp＊640dp，那我们选择导出的单位就为MDPI，这样开发就直接读取值就行，不用换算了。如果给iOS导出尺寸，画板是375pt＊667pt，那就选择导出的单位为@1x。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/01cfab5a25de24a801216e8d09f90b.jpg@800w_1l_2o_100sh.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;windows标注神器：&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Markman（http://www.getmarkman.com），&lt;/li&gt;
  &lt;li&gt;Pxcook像素大厨（http://www.fancynode.com.cn），&lt;/li&gt;
  &lt;li&gt;Assister ps（ http://witstudio.net/en/assistor/ ）&lt;/li&gt;
  &lt;li&gt;Markly（http://marklyapp.com/）&lt;/li&gt;
  &lt;li&gt;INK（http://ink.chrometaphore.com/）&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;切图&quot;&gt;切图&lt;/h5&gt;
&lt;ul&gt;
  &lt;li&gt;通常我们切图格式为png，当然，现在h5页面、网页开发基本都是采用svg格式（矢量）。&lt;/li&gt;
  &lt;li&gt;在sketch中，我们可以新建一个面板，专门放切图文件。&lt;/li&gt;
  &lt;li&gt;ps也有切图插件cutterman，一键切图，非常智能高效。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;切图我们需要注意的是：&lt;/strong&gt;
&lt;strong&gt;统一规格：&lt;/strong&gt;通常，我们都有一套自己的图标设计规范，在这个规范内进行我们的图标设计，设计完后再用到相应的位置。比如，安卓常见的图标制作大小为24dp，安卓切图通常就为24dp 
&lt;img src=&quot;https://img.zcool.cn/community/0137f55a25de79a80120ba38ed3581.jpg@800w_1l_2o_100sh.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;注意点击范围：&lt;/strong&gt;安卓的安全点击范围为48dp，比如我们顶部的导航返回键，点击范围就应该设置为48dp。虽然通常设计切图可以不切这么大，但是应该在移交的时候注明点击范围。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;统一命名：&lt;/strong&gt;命名规范，其实也就像我们使用ps的时候图层命名一样，它的主要作用是让我们能够快速找到想要的切图和区分其他切图，是一个习惯的问题。切图命名统一英文，不要用中文，程序不识别的。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;安卓点九切图：&lt;/strong&gt;这个是安卓切图比较特别的地方，点九切图可以更好的适配手机和减少系统占用资源，当然并不是所有安卓切图都用点九，只是在特殊情况下才使用的，比如按钮、背景等。使用点九，你可以用ps切，也可以下载一个点九图的生成器。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/01839a5a25deada801216e8d2acee8.jpg@800w_1l_2o_100sh.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;切图的输出：&lt;/strong&gt;虽然前面我们讲了只做一套设计稿，但是我们切图的时候最好分别输出，因为安卓和iOS的命名是不一样的。iOS切图是全部放在一个文件夹的，以后缀名不同来区分@2x和@3x。而安卓是把2倍图和3倍图分开放在不同的文件夹里，名字都是一样的，2倍图放在xhdpi的文件夹中，3倍图放在xxhdpi中。
&lt;img src=&quot;https://img.zcool.cn/community/010bc25a25ded2a80120ba38ee6ba8.jpg@800w_1l_2o_100sh.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;交互与视觉输出：&lt;/strong&gt;交互设计师需要把页面跳转流程、交互事件在交互文档中说明。视觉设计师最后输出切图、标注、图片，最后统一移交给开发。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/01fc005a25df13a801216e8d20e2db.jpg@800w_1l_2o_100sh.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/012de85a25df3ba80120ba384ac97a.jpg@800w_1l_2o_100sh.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;2控件差别&quot;&gt;2.控件差别&lt;/h4&gt;

&lt;h5 id=&quot;导航&quot;&gt;导航&lt;/h5&gt;
&lt;ul&gt;
  &lt;li&gt;导航栏的高度是不相同的，iOS系统规范为44pt，安卓的为56dp。&lt;/li&gt;
  &lt;li&gt;其次iOS导航栏的标题在中间，返回键旁边可以有返回字样或者上一层级的名称；而安卓导航栏的标题通常是和返回键挨着的，还有就是两者的箭头样式不同。&lt;/li&gt;
  &lt;li&gt;如果只做一套，那就把标题统一放在中间，返回键旁边也不需要放指示文字。
&lt;img src=&quot;https://img.zcool.cn/community/0139bf5a25df7da80120ba38ad7431.jpg@800w_1l_2o_100sh.jpg&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;弹窗&quot;&gt;弹窗&lt;/h5&gt;

&lt;h6 id=&quot;dialogalerts&quot;&gt;Dialog／Alerts&lt;/h6&gt;
&lt;p&gt;首先它们在两个平台的名称不一样，安卓称之为dialog，iOS中称之为alert。使用场景就是：需要用户对此弹框进行操作后才能继续执行其他任务。使用Dialog／Alerts的时候还是谨慎一点比较好，尽量不要给用户带来糟糕的体验感。
&lt;img src=&quot;https://img.zcool.cn/community/0164df5a25dfb0a80120ba38d27d42.jpg@800w_1l_2o_100sh.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h6 id=&quot;toasthud&quot;&gt;Toast／HUD&lt;/h6&gt;
&lt;p&gt;toast是安卓中的习惯叫法，HUD是iOS中的习惯叫法。&lt;/p&gt;

&lt;p&gt;安卓中是这样规范toast的：
1.出现在屏幕底部。2.只能放文字不能带图标，文字要精简不宜太长。3.不是模态的，可以透过Toast对其他控件进行操作。4.短时间后会自动消失。5.不能对Toast进行交互，不能手动操作让Toast主动消失。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;它们两的不同主要是：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Toasts一般出现在屏幕下方，HUD出现在屏幕中间。&lt;/li&gt;
  &lt;li&gt;Toasts一般是灰黑或黑色半透明，HUD一般是毛玻璃半透明。&lt;/li&gt;
  &lt;li&gt;每次产生的Toasts内容不可改变，HUD内容可以改变（比如调节音量时出现的HUD）
*但其实现在toast使用也已泛化，每个平台都在用，而且也延伸出其他样式，出现的位置也不一定在中间或者底部，也有可能出现在顶部。&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;actionbaraction-sheetsacitivity-views&quot;&gt;Actionbar（Action Sheets、Acitivity Views）&lt;/h5&gt;
&lt;p&gt;动作栏虽然两个系统都有，但是官方给的指导建议还是有些不同的。&lt;/p&gt;

&lt;p&gt;安卓中称为Bottom Sheets，特别适合有三个或者三个以上的操作需要提供给用户选择、并且不需要对操作有额外解释的情景。如果只有两个或者更少的操作，或者需要详加描述的，可以考虑使用菜单(Menu)或者对话框替代。&lt;/p&gt;

&lt;p&gt;底部动作条(Bottom Sheets)可以是列表样式的也可以是宫格样式的，没有取消按钮。宫格布局可以增加视觉的清晰度。在一个标准的列表样式的底部动作条(Bottom Sheets)中，每一个操作应该有一句描述和一个左对齐的 icon。如果需要的话，也可以使用分隔符对这些操作进行逻辑分组，也可以为分组添加标题或者副标题。&lt;/p&gt;

&lt;p&gt;而iOS中，也有和安卓类似的功能，但是action sheets是没有图标的，居中对齐，在action sheets（操作列表）和activity views（活动视图）通常还带有一个取消按钮，通常点击取消或者弹窗外的界面，弹窗都会消失。&lt;/p&gt;

&lt;p&gt;其实，安卓中也有不带文字的操作列表，不过通常是在屏幕中间弹出。样式我们现在基本也趋于统一，不去纠结每个平台的特殊性了。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/016c535a25e00ea80120ba38b682c1.jpg@800w_1l_2o_100sh.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h6 id=&quot;tips和popover&quot;&gt;tips和popover&lt;/h6&gt;
&lt;p&gt;这两种用法在每个平台都有用到，我们在正确的场景中使用它们就好了。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/01f3225a25e042a80120ba38dac389.jpg@800w_1l_2o_100sh.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h6 id=&quot;snackbar&quot;&gt;Snackbar&lt;/h6&gt;
&lt;p&gt;安卓独有的（见上图）。它是一种针对操作的轻量级反馈机制，常以一个小的弹出框的形式，出现在手机屏幕下方或者桌面左下方。它们出现在屏幕所有层的最上方，包括浮动操作按钮。&lt;/p&gt;

&lt;p&gt;它们会在超时或者用户在屏幕其他地方触摸之后自动消失。Snackbar 可以在屏幕上滑动关闭。当它们出现时，不会阻碍用户在屏幕上的输入，并且也不支持输入。屏幕上同时最多只能现实一个 Snackbar。&lt;/p&gt;

&lt;h4 id=&quot;动画&quot;&gt;动画&lt;/h4&gt;

&lt;p&gt;Material Design运用的是机械物理和电磁物理，而iOS的动效更多建立在镜头运动和景深变化上。究其设计语言的本质就是让用户可以把客观经验移植到界面的一种思路。&lt;/p&gt;

&lt;p&gt;Material Design动画最引人注目的就是响应式交互动画，更加模拟真实物理场景，点击后就会泛起“涟漪”作为一个交互响应。而其他物体的排列则按照一种“深浅”的层级来排布，离手指越近的元素越亮，阴影越深，而离开远的元素则越暗，直至淹没在黑暗之中。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/018a3f5a25e073a80120ba3872acef.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;iOS的系统动效可以发现，每当用户去点击，镜头就会切近，而背景则是隐入了一片高斯模糊的景深之中。高斯模糊也成为了iOS特有的一个表达层级关系的利器（其中不仅是模糊，还存在着镜头晃动时的位移）。同样类型的动效还体现在打开app的时候由一个点放大成一个面，包括“日历”App和“相册”App（皆为系统应用）中年-日-月切换的操作，均是镜头思路的表现形式。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/01d67b5a25e09fa80120ba3825bdf3.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h5 id=&quot;按钮&quot;&gt;按钮&lt;/h5&gt;
&lt;p&gt;安卓主要使用的按钮是：扁平按钮、凸起按钮、悬浮按钮、底部常驻按钮、下拉菜单按钮、开关按钮。&lt;/p&gt;

&lt;p&gt;iOS和安卓的按钮形式都很接近，系统主要采用文字按钮和图标按钮。&lt;/p&gt;

&lt;p&gt;两者最大的差异是安卓点击有响应效果。比如：悬浮响应按钮(Floating action button)， 点击后会产生墨水扩散效果的圆形按钮。浮动按钮(Raised button)， 常见的方形纸片按钮，点击后会产生墨水扩散效果。扁平按钮(Flat button)， 点击后产生墨水扩散效果，和浮动按钮的区别是没有浮起的效果。而iOS没有墨水扩散效果，而是颜色变浅来反馈用户点击事件。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/01e3535a25e0d6a80120ba38a4a89f.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/01d4bd5a25e0f5a801216e8d827175.jpg@800w_1l_2o_100sh.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h5 id=&quot;键盘&quot;&gt;键盘&lt;/h5&gt;
&lt;p&gt;安卓和iOS的键盘是不相同的，根据不同场景呼出不同的键盘类型，具体使用场景大家可以自己去深入了解下。如下图。通常对于对话框来说，iOS的发送按钮是可以直接放在键盘上的，而安卓的通常是放在对话框里面。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/01a9905a25e13ba80120ba380187ab.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h5 id=&quot;选择控件和日期选择等&quot;&gt;选择控件和日期选择等&lt;/h5&gt;
&lt;p&gt;常见的选择控件样式是不相同的，iOS像滚轮，模糊弱化未选择的选项，安卓就是平移滑动。开关控件样式也是不相同的。通常这些对于做原生应用的来说，各自调用各自的系统组件就行，但是对于h5来说，他们是采用统一的设计，安卓和iOS是相同的，应该让开发制作统一样式，需要更少的系统区分。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/014cdb5a25e16ea801216e8dacf9e4.jpg@800w_1l_2o_100sh.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;ios11&quot;&gt;iOS11&lt;/h3&gt;

&lt;h4 id=&quot;设计语汇&quot;&gt;设计语汇&lt;/h4&gt;
&lt;h5 id=&quot;1字体加重&quot;&gt;1.字体加重&lt;/h5&gt;
&lt;p&gt;字体的变化在这个版本来说是非常大的，字重发生变化，比如主界面，App 名称的字变粗，日历字体变粗改进阅读体验。
&lt;img src=&quot;https://img.zcool.cn/community/0117755a25e1aaa80120ba38d580db.jpg@800w_1l_2o_100sh.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h5 id=&quot;2字体变大&quot;&gt;2.字体变大&lt;/h5&gt;
&lt;p&gt;全新的 Navigation Bar，我们可能早就已经见过过这种样式了，去年(2016)在新版 Apple Music 就应用了这种大大字 Nav Bar，可谓是iOS的一次尝试，随后在今年就全部应用在iOS11系统中了。当然设计师也不要担心开发的实现难度，iOS11也开放 API 让大家使用了。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/01496d5a25e1d8a801216e8ded6a6e.jpg@800w_1l_2o_100sh.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h5 id=&quot;3卡片阴影圆角的应用&quot;&gt;3.卡片、阴影、圆角的应用&lt;/h5&gt;
&lt;p&gt;卡片的应用，大家可以去观察App Store，这次它的改变也非常大，整体交互架构都发生了变化，视觉表现也让人耳目一新，当然它的改变不是为了更好看，而是为了达到苹果公司的商业目的。App Store也充分展现了卡片、阴影、圆角的应用方式。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/018d525a25e1f2a80120ba38950876.jpg@800w_1l_2o_100sh.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h5 id=&quot;4icon从空心到实心&quot;&gt;4.icon从空心到实心&lt;/h5&gt;
&lt;p&gt;据研究表明，实心的图标比空心更容易识别。当然，这里的改变主要的原因我认为是卡片和阴影的应用，实心图标能更好的和它们结合在一起。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/01c1bd5a25e219a801216e8d52a191.jpg@800w_1l_2o_100sh.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h5 id=&quot;5键盘样式改变&quot;&gt;5.键盘样式改变&lt;/h5&gt;
&lt;p&gt;数字虚拟键盘也从原来的空心变成实心了，它和拨号、计算器统一为实心按钮。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/01ad205a25e237a80120ba38bc7eff.jpg@800w_1l_2o_100sh.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;系统本身交互和应用的变化&quot;&gt;系统本身交互和应用的变化&lt;/h4&gt;
&lt;h5 id=&quot;1解锁交互发生变化&quot;&gt;1.解锁交互发生变化&lt;/h5&gt;
&lt;p&gt;iPhone x解锁采用面部解锁，取代了原来的指纹解锁，实体home键已经被虚拟条取代。 
&lt;img src=&quot;https://img.zcool.cn/community/0189375a25e25da801216e8d268d85.jpg@800w_1l_2o_100sh.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h5 id=&quot;2控制中心的变化&quot;&gt;2.控制中心的变化&lt;/h5&gt;
&lt;p&gt;控制中心从原来的2个页面变为现在的一个页面了。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/016ae55a25e276a80120ba38f6b158.jpg@800w_1l_2o_100sh.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h5 id=&quot;3计算器拨号样式的变化&quot;&gt;3.计算器、拨号样式的变化&lt;/h5&gt;
&lt;p&gt;计算器和拨号样式也和数字键盘一样，从空心按钮便为实心按钮。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/011edb5a25e292a801216e8d1d2b98.jpg@800w_1l_2o_100sh.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;五iphone-x&quot;&gt;五、iPhone x&lt;/h3&gt;

&lt;h4 id=&quot;尺寸&quot;&gt;尺寸&lt;/h4&gt;
&lt;p&gt;原来的屏幕在 iPhone X 之前，尽管 iPhone SE，7 和 7 Plus 的屏幕尺寸大小不同，但都是 16:9 的屏幕。而 iPhone X 差不多是个 13:6 的屏幕812pt x 375 pt（2436px x 1125px）。屏幕的绝对尺寸也变大了，从 4.7 吋增大到 5.8 吋。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/019bed5a25e384a80120ba38cce990.jpg@800w_1l_2o_100sh.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/019b865a25e3ada801216e8d2c37fb.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;就尺寸大小来说，我们就可以简单的认为，iPhone X的竖屏模式，宽度与iPhone6、iPhone7、iPhone8的4.7寸显示屏宽度相同；iPhone X的高度比4.7寸的屏幕要高出145pt，增加大约20%的垂直显示空间。应用程序可以显示高分辨率的图像。iPhone X是显示高分辨率的@3x图片。375x812@1x，3倍尺寸就为1125x2436@3x，所以我们设计稿就以375pt x 812pt做，最后导出3倍图就可以。&lt;/p&gt;

&lt;h4 id=&quot;安全区&quot;&gt;安全区&lt;/h4&gt;
&lt;p&gt;为了在iPhone x上适配我们的设计，我们就不得不考虑这个问题。相对于其他来说，iPhone x 的状态栏变高了，垂直空间更大，展示的内容更多。还有home键采用虚拟条，交互也发生了一些变化。我们通过下面的图来了解它。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/017ea05a25e434a801216e8d3a3ca8.jpg@800w_1l_2o_100sh.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

</description>
        <pubDate>Wed, 01 Apr 2020 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2020/04/01/%E5%AE%89%E5%8D%93%E5%92%8CiOS%E7%9A%84%E5%8C%BA%E5%88%AB.html</link>
        <guid isPermaLink="true">http://localhost:4000/2020/04/01/%E5%AE%89%E5%8D%93%E5%92%8CiOS%E7%9A%84%E5%8C%BA%E5%88%AB.html</guid>
        
        <category>移动端</category>
        
        
        <category>移动端</category>
        
      </item>
    
      <item>
        <title>区域分割</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;连1px的分割线都用不好，可别说你懂界面设计。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;1分割线设计&quot;&gt;1、分割线设计&lt;/h2&gt;

&lt;p&gt;在UI设计中，最传统也是最常见的的分隔方式是“线”。它能起到分隔、组织、细化的作用，帮助用户了解页面层次，赋予内容组织性。&lt;/p&gt;

&lt;p&gt;对信息的阻隔程度的大小：全出血分隔线（全屏分割线）＞内嵌式分割线（单边分割线）＞悬浮分割线&lt;/p&gt;

&lt;p&gt;全屏分割线主要用于区隔差异度较大的信息内容，如不同功能模块之间的区分；&lt;/p&gt;

&lt;p&gt;单边分割线主要用于区隔差异度适中的信息内容，如一级信息与二级信息的区分；&lt;/p&gt;

&lt;p&gt;悬浮分割线主要用于区隔差异度较小的信息内容，如同级信息之间的区分。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/01c8d45db781c7a801209e1f6d4016.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;a全出血分隔线全屏分割线&quot;&gt;a.全出血分隔线（全屏分割线）&lt;/h3&gt;

&lt;p&gt;“出血”是一种平面印刷中的概念，而“全出血”指的是分隔线横向贯穿整个页面，一般为了&lt;strong&gt;区分更加独立性的内容信息&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;比如：知乎的“想法”feed流里，就是采用全出血分隔线的形式，让信息分隔的更明显，更加独立性。 （可以点击看大图）&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/0132505a558fb6a8012113c7eee529.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;如今日头条的首页，在信息流的卡片中运用了全屏分割线，将新闻内容和工具栏这两个不同功能的信息明确地区分开来。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/0137945c417de4a801203d2246e109.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;其他App的使用情况：区分导航栏与信息流内容，区分卡片标题与下级功能入口。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/0168f35c417eaba801203d2273faf6.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;b内嵌式分割线单边分割线&quot;&gt;b.内嵌式分割线（单边分割线）&lt;/h3&gt;

&lt;p&gt;内嵌式分割线，不同于前者，它一般会在“线”的前面留有缺口，来区分统一模块下的相关内容，目的是为了让用户浏览大量相关内容时，更加高效。&lt;/p&gt;

&lt;p&gt;比如：知乎的“更多”页面，卡片内采用内嵌式分割线，来区分同一维度下有关联的内容。&lt;/p&gt;

&lt;p&gt;比如第二个模块里，我的创作、我的收藏、我的关注、我的邀请回答，都是“我”操作后的内容信息；而第三个模块，已购内容、我的私家课、我的Live…，都是跟“钱”或“付费”相关的。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/01438c5a558feda80120121fdf08be.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;所以，采用内嵌式分割线，比较&lt;strong&gt;适合这种划分有关联性的内容，同时有提升浏览效率&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;其实，采用“线”的分割方式是比较保守的解决方案，但是，前提是要处理好“线”的&lt;strong&gt;间距、粗细、颜色，等问题&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;单边分割线在形式上起到了&lt;strong&gt;平衡视觉重心的作用&lt;/strong&gt;。如下面左图平衡了加减图标的重量感，右图平衡了方块的重量感。但单边分割线在这里更重要的作用是，配合全屏分割线，形成信息的主次关系。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/018f175c418731a801203d22a5a7c6.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;悬浮分割线&quot;&gt;悬浮分割线&lt;/h3&gt;

&lt;p&gt;悬浮分割线两侧均有留白，与页面边缘不接触。&lt;/p&gt;

&lt;p&gt;悬浮分割线运用在信息流页面中，两侧的留白会形成清晰流畅的视觉流，引导用户往下滑动页面，浏览更多的信息。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/0160065c418776a801213f26831006.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;2无框设计&quot;&gt;2.无框设计&lt;/h2&gt;

&lt;p&gt;无框设计是近两年流行起来的的一种新的趋势，是去除界面中的边框，分割线，用间距来区分内容。&lt;/p&gt;

&lt;h3 id=&quot;a大图为主&quot;&gt;a.大图为主&lt;/h3&gt;

&lt;p&gt;大图为主指的是以图片为主的产品，每张图片本身就可以起到分割的作用，因此，不需要采用多余的线或边框进行分割。&lt;/p&gt;

&lt;p&gt;比如：instagram，发布图片前，用户被强制对图片进行正方形截取，才能保证图片在feed流里的宽度，撑满全屏，从而看起来很整体。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/01778b5a55902aa8012113c7a70db7.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;为什么国外的产品就这么高大上，微博怎么就不能去分割线，做减法，搞的洋气一些呢？&lt;/p&gt;

&lt;p&gt;微博支持发送图片、文章、视频、纯文字、签到、点评…等等的内容。同时微博feed流里的图片，支持1张－9张不同情况的排版，而且1张图片时，为了更好的呈现出用户的原图比例，还要处理成4:3，16:9，正方形，以及特殊尺寸的缩略样式，同时还有gif图的情况，还支持你在自己状态下添加不同话题。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/011e5e5a559040a8012113c736a1ad.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;b内容有规律&quot;&gt;b.内容有规律&lt;/h3&gt;

&lt;p&gt;内容有规律指的是，&lt;strong&gt;留白间距上下的内容，最好是相对一致的、重复的、亲密的&lt;/strong&gt;，这样用户会下意识的将其分为一组。&lt;/p&gt;

&lt;p&gt;比如，Airbnb采用的无框设计，原因是它们的信息元素很统一、重复，才给人营造出比较整体的感觉。同时，合理的运用大标题也起到关键性作用。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/0158a25a559058a80120121ffd4f92.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;而同样采用无框设计的“下厨房”APP，首屏由于每个模块信息元素不一致，而且模块内元素的左右间距也不一样，字号种类过多，导致界面看起来相对有些杂乱。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/0195705a55906ca80120121fada511.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;c小众且垂直产品&quot;&gt;c.小众且垂直产品&lt;/h3&gt;

&lt;p&gt;小众且垂直的产品，一般情况下目标用户聚焦，功能简洁。因此，&lt;strong&gt;能够比较好的运用无框设计，跳出传统的规范做出创新的设计&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;比如：轻芒杂志，采用无框设计的同时打破传统的移动端浏览体验，更符合它们自己的产品调性。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/010da45a559080a8012113c7db9479.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;下面是FOOTAGE，一款小众且文艺的产品，由VUE的团队设计的。他们采用无框设计的前提是，每个界面元素有限，功能内容简洁。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/011ec15a559092a80120121ff11018.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;2颜色分割&quot;&gt;2、颜色分割&lt;/h2&gt;

&lt;p&gt;优点：分区明显，比线段更醒目；&lt;/p&gt;

&lt;p&gt;缺点：页面层级多，颜色多；&lt;/p&gt;

&lt;p&gt;视觉风格走向：偏清单列表，客观陈列；&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/01455d5db78203a8012163ba2a9661.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;3留白&quot;&gt;3、留白&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/010c345db7823ca8012163ba50b26b.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;使用卡片的留白：由卡片对内容由进行区域归纳整合，所以，留白的多少对于信息的区隔影响不大。&lt;/p&gt;

&lt;p&gt;不使用卡片的留白：留白的大小决定着区隔的强弱。&lt;/p&gt;

&lt;p&gt;留白的大小至关重要，如果没有使用“卡片”和“线段”进行区域间隔，我们需要加大留白来增强区域间隔感。因为格式塔接近性原则告诉我们：靠的近的元素比离得远的元素更被认为是有关联。以下，是我在街上看到的一个广告招牌，由于信息留白区域不合理，直接影响信息呈现与内容阅读。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/016be95db78272a8012163babd5fad.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;参考资料&quot;&gt;参考资料&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://www.zcool.com.cn/article/ZODYyNDU2.html&quot;&gt;连1px的分割线都用不好，可别说你懂界面设计&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Wed, 01 Apr 2020 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2020/04/01/%E5%8C%BA%E5%9F%9F%E5%88%86%E5%89%B2.html</link>
        <guid isPermaLink="true">http://localhost:4000/2020/04/01/%E5%8C%BA%E5%9F%9F%E5%88%86%E5%89%B2.html</guid>
        
        <category>移动端</category>
        
        
        <category>移动端</category>
        
      </item>
    
      <item>
        <title>iOS设计规范总结</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;iOS设计规范总结。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2020/03/13/IZvQyEiogn6tF3D.jpg&quot; alt=&quot;Alt&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;一ios五点两图记忆法&quot;&gt;一、iOS五点两图记忆法&lt;/h4&gt;

&lt;p&gt;如何有效记住iOS设计规范，我总结了一个方法“iOS五点两图记忆法”，也就是五个点+两张图。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;设计尺寸：375x667pt @1x（750x1334px @2x）为基准设计。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;设计工具：Sketch、Adobe XD、Photoshop&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;预览效果：Sketch Mirror、Adobe XD或Ps Play&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;切图输出：@2x @3x两套&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;标注工具：蓝湖，摹客&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2020/03/09/ersCZEm6kTSI1qH.jpg&quot; alt=&quot;Alt&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2020/03/09/9jdDwNIQ56faVCq.jpg&quot; alt=&quot;Alt&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/0137465cecb551a801209aa0bdaa0c.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;两图psd下载链接：https://pan.baidu.com/s/15g2x0vDd1yZevADuUj1V3g 提取码: i4ai&lt;/p&gt;

&lt;h4 id=&quot;设计师使用一倍基准尺寸作图的原因&quot;&gt;设计师使用一倍基准尺寸作图的原因&lt;/h4&gt;

&lt;p&gt;主要是单位转换方便，输出切图方便。对于工程师，他们不用再进行复杂的换算，有助于完美复现设计稿。&lt;/p&gt;

&lt;h3 id=&quot;二引导页&quot;&gt;二、引导页&lt;/h3&gt;

&lt;p&gt;引导页是一张完整图，不能适配，因此需要单独出设计图，iOS共需提供6套尺寸，当然也支持视频形式。（目前5以下的适配基本淘汰）&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;手机型号&lt;/th&gt;
      &lt;th&gt;实际像素&lt;/th&gt;
      &lt;th&gt;逻辑像素&lt;/th&gt;
      &lt;th&gt;张数&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;11 Pro Max、 XS Max&lt;/td&gt;
      &lt;td&gt;1242x2688px&lt;/td&gt;
      &lt;td&gt;414x896pt&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Pro、XS、X&lt;/td&gt;
      &lt;td&gt;1125x2436px&lt;/td&gt;
      &lt;td&gt;375x812pt&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;XR&lt;/td&gt;
      &lt;td&gt;828x1792px&lt;/td&gt;
      &lt;td&gt;414x896pt&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;6p、6sp、7p、8p&lt;/td&gt;
      &lt;td&gt;1242x2208px&lt;/td&gt;
      &lt;td&gt;414x736pt&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;6、6s、7、8&lt;/td&gt;
      &lt;td&gt;750×1334px&lt;/td&gt;
      &lt;td&gt;375x667pt&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;5、5s、5c、SE&lt;/td&gt;
      &lt;td&gt;640x1136px&lt;/td&gt;
      &lt;td&gt;320x568pt&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;4、4s&lt;/td&gt;
      &lt;td&gt;640x960px&lt;/td&gt;
      &lt;td&gt;320×480pt&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;三图标&quot;&gt;三、图标&lt;/h3&gt;

&lt;p&gt;以1024x1024px尺寸进行图标创作即可。&lt;strong&gt;再通过现成尺寸模版资源，一键生成整套尺寸导出即可。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;模版链接：https://developer.apple.com/design/resources/Template-AppIcons-iOS&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;注意：最终提交给到程序员的切图是直角，非圆角图标。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2020/03/09/IeftJwhiGrq9zdN.jpg&quot; alt=&quot;Alt&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2020/03/09/be15X7JEQHKaWu4.jpg&quot; alt=&quot;Alt&quot; /&gt;&lt;/p&gt;

&lt;p&gt;在应用界面的设计中，功能图标不是单独的个体，通常是由许多不同的图标构成整个系列，它们贯穿于整个产品应用的所有页面并向用户传递信息。&lt;/p&gt;

&lt;p&gt;一套APP图标应该具有相同的风格，包括造型规则、圆角大小，线框粗细，图形样式和个性细节等元素都应该具有统一的规范。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/01523c5ac19db7a801218207df5705.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;通过分析以上三组图标可以得出：他们具有统一的色彩，统一的圆角大小，统一的线框粗细，那综合起来也就是具有统一的风格，给用户高度统一的视觉体验。&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;设备名称&lt;/th&gt;
      &lt;th&gt;应用图标&lt;/th&gt;
      &lt;th&gt;App Store图标&lt;/th&gt;
      &lt;th&gt;Spotlight                 图标&lt;/th&gt;
      &lt;th&gt;设置图标&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;iPhone11P, 11P Max, X, Xs, 8P , 7P , 6s P , 6P&lt;/td&gt;
      &lt;td&gt;180 x 180 px&lt;/td&gt;
      &lt;td&gt;1024 x 1024 px&lt;/td&gt;
      &lt;td&gt;120 x 120 px&lt;/td&gt;
      &lt;td&gt;87 x 87 px&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;iPhone11, XR, 8, 7, 6s, 6, SE，5s, 5c, 5,4s, 4&lt;/td&gt;
      &lt;td&gt;120 x 120 px&lt;/td&gt;
      &lt;td&gt;1024 x 1024 px&lt;/td&gt;
      &lt;td&gt;80 x 80 px&lt;/td&gt;
      &lt;td&gt;58 x 58 px&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;iPhone 1, 3G, 3GS&lt;/td&gt;
      &lt;td&gt;57 x 57 px&lt;/td&gt;
      &lt;td&gt;1024 x 1024 px&lt;/td&gt;
      &lt;td&gt;29 x 29 px&lt;/td&gt;
      &lt;td&gt;29 x 29 px&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;iPad Pro 12.9, 10.5&lt;/td&gt;
      &lt;td&gt;167 x 167 px&lt;/td&gt;
      &lt;td&gt;1024 x 1024 px&lt;/td&gt;
      &lt;td&gt;80 x 80 px&lt;/td&gt;
      &lt;td&gt;58 x 58 px&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;iPad Air 1 &amp;amp; 2, Mini 2 &amp;amp; 4,3 &amp;amp; 4&lt;/td&gt;
      &lt;td&gt;152 x 152 px&lt;/td&gt;
      &lt;td&gt;1024 x 1024 px&lt;/td&gt;
      &lt;td&gt;80 x 80 px&lt;/td&gt;
      &lt;td&gt;58 x 58 px&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;iPad 1, 2, Mini 1&lt;/td&gt;
      &lt;td&gt;76 x 76 px px&lt;/td&gt;
      &lt;td&gt;1024 x 1024 px&lt;/td&gt;
      &lt;td&gt;40 x 40 px&lt;/td&gt;
      &lt;td&gt;29 x 29 px&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;三状态栏和导航栏具体尺寸见五点二图&quot;&gt;三、状态栏和导航栏（具体尺寸见五点二图）&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;状态栏：&lt;/strong&gt;显示时间、运营商信息、电池电量等信息区域。(齐刘海区域)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;导航栏：&lt;/strong&gt;状态栏下面的区域，含页面标题、功能图标等信息区域。&lt;/p&gt;

&lt;p&gt;状态栏跟导航栏一般会进行一体化设计。现在流行大标题导航栏设计，也就是加大导航栏的高度，融入页面内容的标题，当内容上滑时，大标题再回归到常规导航高度。（大标题导航栏的高度一般为116pt（232px），这里包括了20pt（40px）状态栏的高度，同时也能放得下34pt（68px）的大标题和辅助信息（如返回等图标）。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2020/03/09/FpZhoeIWrUY8vA7.jpg&quot; alt=&quot;Alt&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;导航栏图标尺寸&quot;&gt;导航栏图标尺寸&lt;/h4&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;建议尺寸&lt;/th&gt;
      &lt;th&gt;最大尺寸&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;48 x48px(24pt x 24pt @2x)&lt;/td&gt;
      &lt;td&gt;56x56px(28pt x 28pt @2x)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;72 x72px(24pt x 24pt @3x)&lt;/td&gt;
      &lt;td&gt;84 x84px(28ptx 28pt @3x)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;strong&gt;导航栏中的元素必须遵守如下几个对齐原则:&lt;/strong&gt;
1、返回按钮必须在左边对齐。
2、当前界面的标题必须在导航栏正中。（可无）
3、其他控制按钮必须在右边对齐。&lt;/p&gt;

&lt;h3 id=&quot;四标签栏具体尺寸见五点二图&quot;&gt;四、标签栏（具体尺寸见五点二图）&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;标签栏：&lt;/strong&gt;即Tab栏，为底部快速入口，iOS规范中Tab栏一般有五个、四个、三个图标的形式。分为“纯图标标签”和“图标加文字标签”两种形式。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2020/03/09/tCuilLVmDpyheWq.jpg&quot; alt=&quot;Alt&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;标签栏图标尺寸&lt;/strong&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;造型&lt;/th&gt;
      &lt;th&gt;正常标签栏&lt;/th&gt;
      &lt;th&gt;紧凑标签栏&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;圆形&lt;/td&gt;
      &lt;td&gt;50x50px(25ptx25pt@2x)&lt;/td&gt;
      &lt;td&gt;36×36px(18ptx18pt@2x)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;圆形&lt;/td&gt;
      &lt;td&gt;75x75px(25ptx25pt@3x)&lt;/td&gt;
      &lt;td&gt;54x54px(18ptx18pt@3x)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;方形&lt;/td&gt;
      &lt;td&gt;46×46px(23ptx23pt@2x)&lt;/td&gt;
      &lt;td&gt;34 x34px(17ptx17pt @2x)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;方形&lt;/td&gt;
      &lt;td&gt;69x69px(23ptx23pt @3x)&lt;/td&gt;
      &lt;td&gt;51x51px(17ptx17pt@3x)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;扁形&lt;/td&gt;
      &lt;td&gt;62px(31pt @2x)&lt;/td&gt;
      &lt;td&gt;46px(23pt@2x)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;扁形&lt;/td&gt;
      &lt;td&gt;93px(31pt@3x)&lt;/td&gt;
      &lt;td&gt;69px(23pt@3x)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;长形&lt;/td&gt;
      &lt;td&gt;56px(28pt@2x)&lt;/td&gt;
      &lt;td&gt;40px(20pt@2x)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;长形&lt;/td&gt;
      &lt;td&gt;84px(28pt@3x)&lt;/td&gt;
      &lt;td&gt;60px(20pt@3x)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2020/03/09/RfJhZTOsnM2NSmL.jpg&quot; alt=&quot;Alt&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;五itunes-上传页面&quot;&gt;五、iTunes 上传页面&lt;/h3&gt;

&lt;p&gt;在程序上传App Store时我们需要提供多张App截图，供用户了解APP的功能。这里我们需要提供1242 x 2688px和1125 x 2436px两套截图。也支持视频形式。（微信目前采用的是五张静态页面形式）&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2020/03/09/FUI4gECbzmTXi3e.jpg&quot; alt=&quot;Alt&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;六-字体&quot;&gt;六、 字体&lt;/h3&gt;

&lt;p&gt;中文字体：PingFang SC，英文字体：SF UI Text 、SF UI Display，其中SF UI Text适用与小于19pt的文字，SF UI Display适用于大于20pt的文字。&lt;/p&gt;

&lt;p&gt;链接: https://pan.baidu.com/s/17cKM9co53TEN85gj4vy5dw 提取码: hd35&lt;/p&gt;

&lt;p&gt;在一款APP中字号范围一般在20-36之间（@2x）,当然iOS 11中出现了大标题的设计，字号还是要根据产品属性酌情设定。另外需要注意的一点是所有的字号设置都必须为偶数，上下级内容字号极差关系为2-4号。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/01b9225ac19df9a8012062e3ac1f59.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;关于字体：在iOS 9推出之前设计师普遍采用华文黑体、谷歌思源、冬青等字体进行设计，iOS 9推出了苹果自己的字体——苹方！自此之后苹方字体被广泛应用于移动端设计中。&lt;/p&gt;

&lt;p&gt;关于字体颜色和是否加粗：字体的颜色设置我们一般很少用纯黑色，一般用深灰色和浅灰色、细体和粗体（注意要用字体本身的字重，不能用PS的加粗功能）来区分重要信息和次要信息，进行信息层级的划分。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/01c3a75ac19e19a8012182071eb80a.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;七色彩&quot;&gt;七、色彩&lt;/h3&gt;

&lt;p&gt;在iPhone上显示的色域要比我们作图时的RGB色域要广。所以在iPhone上设计怎样的颜色都可以，只要符合产品气质并且在色彩心理学理论范围内。官方建议的系统色彩如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2020/03/09/eMsCp9qLHBG2JUF.jpg&quot; alt=&quot;Alt&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;八控件&quot;&gt;八、控件&lt;/h3&gt;

&lt;p&gt;控件包括：输入框、按钮、滑杆、页卡、开关等，在设计模板中已经全部列出。&lt;/p&gt;

&lt;p&gt;下载地址：https://developer.apple.com/design/resources/&lt;/p&gt;

&lt;p&gt;为了让设计更符合整体产品品牌调性，这些控件可以做二次设计。&lt;/p&gt;

&lt;p&gt;但得注意两件事：第一，点击区域基本符合44pt（88px）原则，也就是在手机上大小大概是7mm-9mm，适合手指点击。第二，要设计操作的不同状态，不要只设计一种状态。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;控件中无处不在的44pt（88px）&lt;/strong&gt;
之前我们介绍过，人手指点击区域为7mm - 9mm，在@2x中就是44pt（88px）。苹果的导航条、列表、工具栏都充满了44pt（88px）这个神秘数字。我们在设计时一定也要考虑到手指的点击区域。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2020/03/09/8Xpj5NtBMHqLG6W.jpg&quot; alt=&quot;Alt&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;九界面设计原则&quot;&gt;九、界面设计原则&lt;/h3&gt;

&lt;h4 id=&quot;1边距和间距2x&quot;&gt;1.边距和间距（@2x）&lt;/h4&gt;
&lt;p&gt;在移动端页面的设计中，页面中元素的边距和间距的设计规范是非常重要的，一个页面是否美观、简洁、通透和边距、间距的设计规范紧密相连。&lt;/p&gt;

&lt;h5 id=&quot;1全局边距ios132x&quot;&gt;（1）全局边距（iOS13，@2x）&lt;/h5&gt;
&lt;p&gt;全局边距是指页面内容到屏幕边缘的距离，整个应用的界面都应该以此来进行规范，以达到页面整体视觉效果的统一。在实际应用中应该根据不同的产品气质采用不同的边距，让边距成为界面的一种设计语言，全局边距的设置可以更好的引导用户竖向向下阅读。还有一种是不留边距，通常被应用在卡片式布局中图片通栏显示，这种图片通栏显示的设置方式，更容易让用户将注意力集中到每个图文的内容本身。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2020/03/09/M7f5AYtxcERnql8.jpg&quot; alt=&quot;Alt&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2020/03/09/StOFvobP9pZLg31.jpg&quot; alt=&quot;Alt&quot; /&gt;&lt;/p&gt;

&lt;p&gt;iOS原生态页面“设置”和“通用”页面的边距都是40px。（@2x）&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2020/03/09/UKE6BouF3wt9yNx.jpg&quot; alt=&quot;Alt&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2020/03/09/61ahmLi4MZCbfBF.jpg&quot; alt=&quot;Alt&quot; /&gt;&lt;/p&gt;

&lt;p&gt;微信和支付宝的边距都是32px。（@2x）&lt;/p&gt;

&lt;h5 id=&quot;2卡片间距&quot;&gt;（2）卡片间距&lt;/h5&gt;
&lt;p&gt;在移动端页面设计中卡片式布局是非常常见的布局方式，至于卡片和卡片之间的距离的设置需要根据界面的风格以及卡片承载信息的多少来界定，通常最小不低于16px，过小的间距会造成用户紧张情绪，使用最多的间距是20px、24px、30px、40px，当然间距也不宜过大，过大的间距会使界面变得松散，间距的颜色设置可以与分割线一致，也可以更浅一些。&lt;/p&gt;

&lt;p&gt;以iOS（750*1334px）为例，设置页面卡片间距为70px，而通知中心承载了大量的信息，因此采用了较小的16px作为卡片的间距。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/01002a5ac19ceda801218207d53e37.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;下面来看一下微信的卡片间距设置的是多少，以及颜色值。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/01e54d5ac19cfea801218207576b69.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;注：卡片间距和颜色值是直接截图测量和吸取的，可能不十分准确&lt;/p&gt;

&lt;p&gt;继续举例，下面的两张截图分别是巨划算（卡片间距20px）和拼多多（卡片间距16px）的首页截图，这种电商类的APP因为需要承载大量的信息，所以一般间距设置的都比较小。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/01ca005ac19d24a8012062e321269d.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;卡片间距的设置是灵活多变的，一定要根据产品的气质和实际需求去设置，平时也可以多截图测量一下各类APP的卡片间距都是怎么设置的，看的多了并融会贯通，卡片间距设置自然会更加合理，更加得心应手。&lt;/p&gt;

&lt;h4 id=&quot;2-内容间距&quot;&gt;2. 内容间距&lt;/h4&gt;

&lt;p&gt;一款APP除了各种栏（状态栏、导航栏、标签栏、工具栏）和控件icon就是内容了，内容的布局形式多种多样，这里不去探讨内容具体应该如何去布局，我们来说一说内容的间距设置问题。&lt;/p&gt;

&lt;p&gt;先来介绍一下格式塔原则中的一个重要的原则就是邻近性，格式塔邻近性原则认为：单个元素之间的相对距离会影响我们感知它是否以及如何组织在一起，，互相靠近的元素看起来属于一组，而那些距离较远的则自动划分组外，距离近的关系紧密。来看下图，左图中的圆在水平方向比垂直距离近，那么，我们看到了4排圆点，而右图则看成4列。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/01027d5ac19d38a8012062e32c3335.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;在UI设计中内容布局时，一定要重视邻近性原则的运用，比如在下面这款轻芒阅读APP的主界面中，每一个应用名称都远离其他图标，与对应的图标距离较近，保持亲密的关系，也让用户的浏览变得更直观，如果应用名称与上下图标距离相同，就分不出它是属于上面还是下面，从而让用户产生错乱的感觉。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/01943e5ac19d4ba801218207f066c6.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;再来看一个案例，日日煮APP，上面图片与文字较近，下面图片与文字较远，所以我们清晰的知道文字是属于上面的图片的。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/018ff95ac19d56a801218207676fee.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;2内容布局&quot;&gt;2.内容布局&lt;/h4&gt;

&lt;p&gt;在APP的设计中内容的布局形式多种多样，这里介绍最常用的两种布局形式，列表式布局和卡片式布局。&lt;/p&gt;

&lt;h5 id=&quot;1列表式布局&quot;&gt;（1）列表式布局&lt;/h5&gt;
&lt;p&gt;列表式布局方式非常普遍，随便打开一个APP，基本都存在这种布局方式。特点在于能够在较小的屏幕中显示多条信息，用户通过上下滑动的手势能获得大量的信息反馈。这也是一种非常容易理解的展示形式。&lt;/p&gt;

&lt;p&gt;以我们最常用的微信和QQ为例，其“信息”页面都是采用的列表式布局，在采用这种布局形式的时候要注意列表舒适体验的最小高度是80px，最大的高度要视内容的多少而定。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/0141435ac19d65a801218207e45a00.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;继续举例，自如（列表高度110px）和唯品会（列表高度106px）的列表式布局。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/014d575ac19d71a801218207238ab4.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h5 id=&quot;2卡片式布局&quot;&gt;（2）卡片式布局&lt;/h5&gt;

&lt;p&gt;形式非常灵活。其特点在于，每张卡片的内容和形式都可以相互独立，互不干扰，所以可以在同一个页面中出现不同的卡片承载不同的内容。而由于每张卡片都是独立存在的，其信息量可以相对列表更加丰富。&lt;/p&gt;

&lt;p&gt;在使用卡片式布局的时候要注意卡片本身一般是白色的，而卡片之间的间距颜色一般是浅灰色，当然不同产品风格颜色可能不一样，有些是浅灰色偏蓝等。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/0107ad5ac19d7fa801218207804879.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;双栏卡片的布局形式，比较常见于以图片信息为主导的App。例如一些商城的商品陈列页面。这种形式与卡片式类似，但它能在一屏里显示更多的内容，至少4张卡片。同时，由于分开左右两栏的显示，用户可以更加方便地对比左右两栏卡片的内容。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/01afdc5ac19d9aa8012062e39cce1b.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;3界面图片设计比例&quot;&gt;3.界面图片设计比例&lt;/h4&gt;

&lt;p&gt;在UI设计中，对于图片的尺寸和比例没有严格的规范，设计师往往凭借经验和感觉设置一个看起来不错的尺寸，但事实上我们是有章可循的。运用科学的手段设置图片的尺寸，可以获得最优的方案，常见的图片尺寸有16:9、4:3、3:2、1:1和1:0.618（黄金比例）等。&lt;/p&gt;

&lt;p&gt;这些比例不无根据，它们都和图片尺寸有关。16:9 是根据人体工程学的研究，发现人的两只眼睛的视野范围是一个长宽比例为16:9的长方形，4:3 是勾三股四弦五，在摄影中非常常见……。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/01ffa55ac19da7a8012062e302078f.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;4app版式设计规范&quot;&gt;4.APP版式设计规范&lt;/h3&gt;
&lt;p&gt;版式设计又叫做版面编辑，即在有限的版面空间里，将版面的构成要素（文字、图片、控件）根据特定的内容进行组合排列。一个优秀的排版要考虑到用户的阅读习惯和设计美感，在UI设计中版面设计的基础原则有哪些呢？&lt;/p&gt;

&lt;h4 id=&quot;对齐&quot;&gt;对齐&lt;/h4&gt;
&lt;p&gt;对齐是贯穿版式设计最基础，最重要的原则之一，它能建立起一种整齐规矩的外观，带给用户有序一致的浏览体验。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/01ffb85ac19dc5a8012062e3528da9.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;对称&quot;&gt;对称&lt;/h4&gt;
&lt;p&gt;对称是对立统一规律的本质属性，呈现出一种和谐自然的美，在应用界面的设计中，引导页设计、注册登录输入框和按钮等无一不是对称的设计。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/0141a55ac19dd9a8012062e34b60a0.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;分组&quot;&gt;分组&lt;/h4&gt;
&lt;p&gt;物以类聚，人以群分。分组是将同类别的信息组合在一起，直观的呈现在用户面前，这样的设计能够减少用户的认知负担，在移动端界面的设计中最常见的分组方式就是卡片，为用户选择提供专注而又明确的浏览体验。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/01d83a5ac19de7a8012062e3104a02.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;5设计适配&quot;&gt;5、设计适配&lt;/h4&gt;

&lt;p&gt;iOS主流设备的分辨率分别是640x1136px（@2x）（iPhone SE）、750 x1334px（@2x）（iPhone 6s/7/8）、1242x2208px（@3x）（iPhone 6s/7/8 Plus）、1125x2436px（@3x）／750x1624px（@2x）（iPhone X）。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2020/03/10/F6HNvmA5PGepVMb.jpg&quot; alt=&quot;Alt&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2020/03/10/yntsjABRE4HbFCU.jpg&quot; alt=&quot;Alt&quot; /&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;设备&lt;/th&gt;
      &lt;th&gt;分辨率&lt;/th&gt;
      &lt;th&gt;状态栏高度&lt;/th&gt;
      &lt;th&gt;导航栏、工具栏高度&lt;/th&gt;
      &lt;th&gt;标签栏高度&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;iPhone SE&lt;/td&gt;
      &lt;td&gt;640×1136px&lt;/td&gt;
      &lt;td&gt;40px&lt;/td&gt;
      &lt;td&gt;88px&lt;/td&gt;
      &lt;td&gt;98px&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;iPhone 6s/7/8&lt;/td&gt;
      &lt;td&gt;750x1334px&lt;/td&gt;
      &lt;td&gt;40px&lt;/td&gt;
      &lt;td&gt;88px&lt;/td&gt;
      &lt;td&gt;98px&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;iPhone 6s/7/8 Plus&lt;/td&gt;
      &lt;td&gt;1242x2208px&lt;/td&gt;
      &lt;td&gt;60px&lt;/td&gt;
      &lt;td&gt;132px&lt;/td&gt;
      &lt;td&gt;147px&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;iPhone X (@3x)&lt;/td&gt;
      &lt;td&gt;1125x2436px&lt;/td&gt;
      &lt;td&gt;132px&lt;/td&gt;
      &lt;td&gt;132px&lt;/td&gt;
      &lt;td&gt;147px&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;iPhone X (@2x)&lt;/td&gt;
      &lt;td&gt;750x1624px&lt;/td&gt;
      &lt;td&gt;88px&lt;/td&gt;
      &lt;td&gt;88px&lt;/td&gt;
      &lt;td&gt;98px&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2020/03/10/8fUrLjwF7AYPkOz.jpg&quot; alt=&quot;Alt&quot; /&gt;&lt;/p&gt;

&lt;p&gt;在设计设计中设计师需要设计一套基准设计图来达到适配多个分辨率的目的，我们可以选择中间尺寸750 x1334px作为基准，向下适配640x1136px，向上适配1242x2208px和750x1624px／1125x2436px。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/01b52d5ac19e2aa8012182075a8fa8.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h5 id=&quot;750x1334向下适配640x1136&quot;&gt;750x1334向下适配640x1136&lt;/h5&gt;

&lt;p&gt;由于750x1334px和640x1136px两个尺寸的界面都是2倍的像素倍率，因此它们的切片大小是相同的，即系统图标、文字和高度都无需适配，需要适配的是宽度。&lt;/p&gt;

&lt;p&gt;为了让大家了解适配的原则，我们以文字描述和图示的方式进行750x1334px到640x1136px的界面推导。&lt;/p&gt;

&lt;p&gt;绘制一个750x1334px的设计图，这是最常见的首页设计图，从上至下分别是状态栏、导航栏、首焦图、主要入口、分割、列表。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/0178a45ac19e3aa8012062e31ae75d.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;下面开始进行适配，上面提到了由于750x1334px到640x1136px都是2倍的像素倍率，界面的图标、文字大小等都是相同的，所以我们不需要改变图像大小，只需将画布大小改成 640x1136px即可，然后再改变横向元素的间距以达到适配的目的。&lt;/p&gt;

&lt;p&gt;首先打开750x1334px的设计稿，执行Command+Alt+C（改变画布大小的快捷键），鼠标左键单击“定位”的左上角的格子，设置宽高为640和1136，点击“确定”。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/012c745ac19e45a8012062e35bafca.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;改变画布大小之后，设计稿的右边和下边都被裁切（上面左图中半透明蒙版覆盖区域），画布缩小成640x1136px。&lt;/p&gt;

&lt;p&gt;上面左图裁切到右图适配完成，做了如下调整。
1）导航栏右边的图标向左移动保持和原来的右边距一致，标题居中。
2）首焦图高度除以1.17（750／640=1.17得到）后居中，宽度640px。
3）主要入口右边的图标向左移动保持和原来的右边距一致，各图标的间距等宽。&lt;/p&gt;

&lt;h5 id=&quot;750x1334向上适配1242x2208&quot;&gt;750x1334向上适配1242x2208&lt;/h5&gt;

&lt;p&gt;由于750x1334px界面是2倍的像素倍率，而1242x2208px是3倍的像素倍率，也就是说1242x2208px界面上所有的元素的尺寸都是750x1334px界面上元素的1.5倍，所以我们在进行适配的时候直接将界面的图像大小变为原来的1.5倍，然后调整画布大小为1242x2208px，最后调整界面图标和元素的横向间距的大小完成适配。&lt;/p&gt;

&lt;p&gt;上面说了整体思路，下面我们来说说具体怎么适配。&lt;/p&gt;

&lt;p&gt;首先对750x1334px的画布执行Command+Alt+I命令（调整图像大小），单位设置为百分比，宽高设置为150%，点击“确定”，调整之后的画布大小为1125x2001px。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/01363d5ac19e55a8012182078d0a15.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;紧接着对1.5倍之后的1125x2001px界面执行Command+Alt+C（调整画布大小），鼠标单击“定位”左上角的格子，调整宽高为1242和2208px，点击“确定”。&lt;/p&gt;

&lt;p&gt;上面左图拓展画布到右图完成适配做了如下调整。
1）导航栏右边的图标向右移动保持和原来的右边距一致，标题居中。
2）首焦图的高度乘以1.65（1242/750=1.65得到）后居中，宽度1242px。
3）主要入口右边的图标向右移动和原来的右边距一致，各图标的间距等宽。
注：分割线仍是1px。&lt;/p&gt;

&lt;h5 id=&quot;750x1334向上适配1125x2436px3x&quot;&gt;750x1334向上适配1125x2436px（@3x）&lt;/h5&gt;

&lt;p&gt;与苹果之前发布的iOS设备相比，iPhone X的像素分辨率发生了变化，为1125x2436px（@3x），在实际工作中为了方便向上和向下的适配，我们仍然可以选择熟悉的iPhone 7（750x1334px）的尺寸作为模版进行设计，只是高度增加了290px；设计尺寸为：750x1624px（@2x）。设计完成之后将设计稿的图像大小拓展1.5倍即可得到1125x2436px（@3x）尺寸的设计稿。&lt;/p&gt;

&lt;p&gt;在适配的时候需要注意，状态栏由之前的40px增加到88px，标签底部预留68px用于放置主页指示器，如下图所示。&lt;/p&gt;

&lt;p&gt;![](https://img.zcool.cn/community/01c1815ac19e90a8012182074703f5.jpg]&lt;/p&gt;

&lt;p&gt;关于主页指示器的适配涉及到两种情况：底部出现标签栏、工具栏等操作设计时，需要将底色下延68px并填充原有颜色，这样的处理可以让底部设计更佳简洁舒适，没有功能操作时，页面底部不需要填充颜色，只需盖住主页指示器即可。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/01b2ab5ac19e9ca8012062e37f9060.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;对于大多数采用瀑布流的页面来说，仅仅是屏幕高度上的变化，可以无视。但对于如：新手引导页、音乐播放器等需要单屏显示的界面就需要重新布局。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/01c2a05ac19ea6a80121820727c9dc.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;十切图规范&quot;&gt;十、切图规范&lt;/h3&gt;

&lt;p&gt;当界面设计定稿之后，设计师需要对图标进行切片提供给开发工程师，通常我们只需要对icon进行切图即可，文字、线条和一些标准的几何形状是不需要切图的，例如搜索框只需要在标注中描述它的尺寸、圆角大小、背景色值、不透明度即可，开发工程师可以用代码实现这种效果。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/01cdef5ac19eb0a8012062e340c7db.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;输出切片&quot;&gt;输出切片&lt;/h4&gt;

&lt;p&gt;先将设计稿中的图标重新排列在一张新的画布中，保证同样尺寸的图标间距相同，这样做的好处是为图标建立一个控件库，有利于图标的整理。&lt;/p&gt;

&lt;p&gt;给每一个图标建立好参考线之后，用PS自带的切片功能，沿着建立好的每个图标的参考线画框即可，注意最后要输出PNG格式的切片（PNG格式拥有更多的颜色和细节并且支持透明）。&lt;/p&gt;

&lt;p&gt;在具体操作时首先要将画布背景色去掉，让画布变成透明，做好切片后执行“文件-存储为Web所用格式，在对话框中选择PNG格式，点击“存储”即可。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/01fb215ac19ec7a8012062e3a47a02.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;注：图中标签栏图标的底色块是为了保证统一的切片尺寸，可以根据色块建立参考线，具体切图时要将色块去掉。&lt;/p&gt;

&lt;h4 id=&quot;切图命名&quot;&gt;切图命名&lt;/h4&gt;

&lt;p&gt;切图最后需要命名成规范格式，方便程序员查找。切图命名的格式建议全英文。借由上述工具切图后，需要整理切图命名，或在切图之前对图层命名亦可。以下是切图元素的中英文对照：&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;简称&lt;/th&gt;
      &lt;th&gt;含义&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;bg&lt;/td&gt;
      &lt;td&gt;(backgrond背景)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;default&lt;/td&gt;
      &lt;td&gt;(默认)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;nav&lt;/td&gt;
      &lt;td&gt;(navbar导航栏)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;pressed&lt;/td&gt;
      &lt;td&gt;(按下)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;tab&lt;/td&gt;
      &lt;td&gt;(tabbar标签栏)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;back&lt;/td&gt;
      &lt;td&gt;(返回)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;btn&lt;/td&gt;
      &lt;td&gt;(button按钮)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;edit&lt;/td&gt;
      &lt;td&gt;(编辑)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;img&lt;/td&gt;
      &lt;td&gt;(image图片)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;content&lt;/td&gt;
      &lt;td&gt;(内容)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;del&lt;/td&gt;
      &lt;td&gt;(delete删除)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;left/center/right&lt;/td&gt;
      &lt;td&gt;(左/中/右)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;msg&lt;/td&gt;
      &lt;td&gt;(message提示信息)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;logo&lt;/td&gt;
      &lt;td&gt;(标识)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;pop&lt;/td&gt;
      &lt;td&gt;(pop up弹出)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;login&lt;/td&gt;
      &lt;td&gt;(登录)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;icon&lt;/td&gt;
      &lt;td&gt;(图标)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;refresh&lt;/td&gt;
      &lt;td&gt;(刷新)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;selected&lt;/td&gt;
      &lt;td&gt;(选择)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;banner&lt;/td&gt;
      &lt;td&gt;(广告)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;disabled&lt;/td&gt;
      &lt;td&gt;(不可点击)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;link&lt;/td&gt;
      &lt;td&gt;(链接)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;user&lt;/td&gt;
      &lt;td&gt;(用户)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;download&lt;/td&gt;
      &lt;td&gt;(下载)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;然后我们要按照“&lt;strong&gt;功能_类型_名称_状态@倍数&lt;/strong&gt;”来命名每个切图，比如我们导航条上有一个搜索图标，那么它的名称就是： 
&lt;strong&gt;navi_icon_search_default@2x.png&lt;/strong&gt;
(&lt;strong&gt;导航_图标_搜索_正常@2x.png&lt;/strong&gt;)&lt;/p&gt;

&lt;h4 id=&quot;设计稿标注&quot;&gt;设计稿标注&lt;/h4&gt;

&lt;p&gt;当界面设计定稿之后，设计师需要对界面进行标注给开发工程师在还原界面时进行参考。借助一些专业的标注工具有利于我们提高工作效率，常用的标注工具有Mark Man或PX Cook。&lt;/p&gt;

&lt;p&gt;在一份设计稿中需要标注的内容是文字的字号大小、粗细、颜色、不透明度；界面的背景颜色、不透明度；各个图标、列表、文字之间的间距。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://img.zcool.cn/community/0157765ac19ef1a8012062e35da4b7.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;界面标注的作用是给开发工程师提供参考，因此在标注之前需要和开发工程师进行沟通，了解他们的工作方式，标注完成之后宣讲你的注意事项，以更快捷高效的完成工作，并且最大限度的完成视觉高的还原。&lt;/p&gt;

&lt;h2 id=&quot;ios开发语言&quot;&gt;iOS开发语言&lt;/h2&gt;

&lt;p&gt;作为iOS开发工程师，最重要的三个工具是：Obiective-C、Swift、UIKit框架。Obiective-C是目前最有效率的语言；而Swift开发非常高效。一般iOS工程师会在这两个语言中选择一种作为开发工具。&lt;/p&gt;

&lt;p&gt;UIKit是苹果系统自带的一套框架，这个框架里有设置按钮、滑竿、状态栏、电池电量、键盘等接口可供调用。所以我们看到很多第三方APP的界面中，有许多控件和苹果自带程序是一致的，这就是UIKit的功劳。&lt;/p&gt;

&lt;h2 id=&quot;ios开发里单位是pt&quot;&gt;iOS开发里单位是pt&lt;/h2&gt;

&lt;p&gt;750×1334尺寸的换算关系 1pt=2px，也就是说程序员拿到我们的px单位的标注稿，自己除以2就是pt了。&lt;/p&gt;

&lt;h3 id=&quot;参考资料&quot;&gt;参考资料&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://m.zcool.com.cn/article/ZMTA5NjkwMA==.html&quot;&gt;也许是2020年全网最全的关于iOS、Android设计规范、适配总结文章&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Wed, 01 Apr 2020 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2020/04/01/iOS%E8%AE%BE%E8%AE%A1%E8%A7%84%E8%8C%83%E6%80%BB%E7%BB%93.html</link>
        <guid isPermaLink="true">http://localhost:4000/2020/04/01/iOS%E8%AE%BE%E8%AE%A1%E8%A7%84%E8%8C%83%E6%80%BB%E7%BB%93.html</guid>
        
        <category>移动端</category>
        
        <category>设计规范</category>
        
        
        <category>移动端</category>
        
      </item>
    
      <item>
        <title>Android设计规范</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;Android设计规范解读。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;一安卓开发单位是dpsp&quot;&gt;一、安卓开发单位是DP、SP&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;DP：安卓专用长度单位。&lt;/strong&gt;
以160 DPI屏幕为标注，则1DP=1PX
计算公式：dp x dpi/160=px
例：以720x1280px （320dpi）为例， 1dp x 320 dpi/160=2px&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SP：安卓专用字体单位。&lt;/strong&gt;
以160 DPI屏幕为标注，则1SP=1PX
计算公式：sp x dpi/160=px
例：以720x1280px （320dpi）为例， 1sp x 320 dpi/160=2px&lt;/p&gt;

&lt;h3 id=&quot;二安卓设计尺寸以1080x1920px作为设计稿标准尺寸&quot;&gt;二、安卓设计尺寸：以1080x1920px作为设计稿标准尺寸&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;从中间尺寸向上、下适配，界面调整幅度最小，最方便适配。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;大屏幕时代依然以小尺寸作为设计尺寸，会限制设计师的设计视角。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;用主流尺寸来做设计稿尺寸，极大的提高了视觉还原和其他机型适配。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;分辨率&lt;/th&gt;
      &lt;th&gt;DPI&lt;/th&gt;
      &lt;th&gt;状态栏高度&lt;/th&gt;
      &lt;th&gt;导航栏高度&lt;/th&gt;
      &lt;th&gt;标签栏高度&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;720x1280px&lt;/td&gt;
      &lt;td&gt;XHDPI&lt;/td&gt;
      &lt;td&gt;50px&lt;/td&gt;
      &lt;td&gt;96px&lt;/td&gt;
      &lt;td&gt;96px&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;1080x1920px&lt;/td&gt;
      &lt;td&gt;XXHDPI&lt;/td&gt;
      &lt;td&gt;60px&lt;/td&gt;
      &lt;td&gt;144px&lt;/td&gt;
      &lt;td&gt;150px&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;三安卓图标尺寸&quot;&gt;三、安卓图标尺寸&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;屏幕大小&lt;/th&gt;
      &lt;th&gt;启动图标&lt;/th&gt;
      &lt;th&gt;操作栏图标&lt;/th&gt;
      &lt;th&gt;上下文图标&lt;/th&gt;
      &lt;th&gt;系统通知图标&lt;/th&gt;
      &lt;th&gt;最细画笔&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;320x480&lt;/td&gt;
      &lt;td&gt;48x48px&lt;/td&gt;
      &lt;td&gt;32x32px&lt;/td&gt;
      &lt;td&gt;16x16px&lt;/td&gt;
      &lt;td&gt;24x24px&lt;/td&gt;
      &lt;td&gt;不小于2px&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;480x800&lt;/td&gt;
      &lt;td&gt;72x72px&lt;/td&gt;
      &lt;td&gt;48x48px&lt;/td&gt;
      &lt;td&gt;24x24px&lt;/td&gt;
      &lt;td&gt;36x36px&lt;/td&gt;
      &lt;td&gt;不小于3px&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;480x854&lt;/td&gt;
      &lt;td&gt;720x1280&lt;/td&gt;
      &lt;td&gt;96x96px&lt;/td&gt;
      &lt;td&gt;64x64px&lt;/td&gt;
      &lt;td&gt;48x48px&lt;/td&gt;
      &lt;td&gt;不小于4px&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;1080x1920&lt;/td&gt;
      &lt;td&gt;144x144px&lt;/td&gt;
      &lt;td&gt;96x96px&lt;/td&gt;
      &lt;td&gt;48x48px&lt;/td&gt;
      &lt;td&gt;72x72px&lt;/td&gt;
      &lt;td&gt;不小于6px&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;四安卓字体&quot;&gt;四、安卓字体&lt;/h2&gt;

&lt;p&gt;中文：思源黑体 / Noto Sans Han
英文：Roboto
大小：主题文字 36-34px    正文 28-26px     提示文字 24-22px
链接: https://pan.baidu.com/s/17cKM9co53TEN85gj4vy5dw 提取码: hd35&lt;/p&gt;

&lt;h2 id=&quot;五切图规范&quot;&gt;五、切图规范&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;切图尺寸必须为双数&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;单像素的图会出现边缘模糊的情况&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;一般情况下，我们只需要提供3套切图资源就可以满足安卓工程师的适配，分别是HDPI、XHDPI、 XXHDPI 3套切图资源。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;六如何用ios的设计稿适配安卓&quot;&gt;六、如何用iOS的设计稿适配安卓&lt;/h2&gt;

&lt;p&gt;现在绝大多数公司限于人力物力的限制，不能把iOS和安卓的设计稿全部执行出来，因此就存在一稿两用的情况；设计师以iOS版本的设计稿来适配安卓，下面我们来看一组有趣的数学换算题：&lt;/p&gt;

&lt;p&gt;1080/1.5=720，720/1.5=480，1242x2208/1.15=1080c1920，也就是说，&lt;strong&gt;1242x2208（iOS@3倍尺寸）&lt;/strong&gt;与1080x1920（安卓尺寸）是可以等比缩放的，所以，&lt;strong&gt;iOS与Android的尺寸是可共用1242x2208px&lt;/strong&gt;。因此，以iOS设计尺寸进行设计是可以适配Android的。&lt;/p&gt;

&lt;p&gt;另一种方式，就是把750×1334px等比例调整尺寸到安卓1080×1920px，对各个控件进行微调，重新提供标注（用dp标注）。也就是需要提供两套标注，一套给iOS，一套给Android。&lt;/p&gt;
</description>
        <pubDate>Wed, 01 Apr 2020 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2020/04/01/Android%E8%AE%BE%E8%AE%A1%E8%A7%84%E8%8C%83%E6%80%BB%E7%BB%93.html</link>
        <guid isPermaLink="true">http://localhost:4000/2020/04/01/Android%E8%AE%BE%E8%AE%A1%E8%A7%84%E8%8C%83%E6%80%BB%E7%BB%93.html</guid>
        
        <category>移动端</category>
        
        <category>设计规范</category>
        
        
        <category>移动端</category>
        
      </item>
    
  </channel>
</rss>
